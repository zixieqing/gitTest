---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2018/10/12 3:27 PM
---
---@class AnniversaryBuySecrentView
local AnniversaryBuySecrentView = class('AnniversaryBuySecrentView', function ()
    local node = CLayout:create(display.size)
    node.name = 'Game.views.artifact.AnniversaryBuySecrentView'
    node:setName('AnniversaryBuySecrentView')
    node:enableNodeEvents()
    return node
end)

local newImageView = display.newImageView
local newLabel = display.newLabel
local newNSprite = display.newNSprite
local newButton = display.newButton
local newLayer = display.newLayer
local RES_DICT = {
    COMMON_BTN_ORANGE                      = app.anniversaryMgr:GetResPath('ui/common/common_btn_orange.png'),
    SUMMER_ACTIVITY_EGG_EXTRA_BAR_GREY     = app.anniversaryMgr:GetResPath('ui/home/activity/summerActivity/carnie/summer_activity_egg_extra_bar_grey.png'),
    ANNI_MAPS_SHOP_LINE                    = app.anniversaryMgr:GetResPath('ui/anniversary/map/anni_maps_shop_line.png'),
    SHIP_ICO_LABEL_GOODS_TAG               = app.anniversaryMgr:GetResPath('ui/airship/ship_ico_label_goods_tag.png'),
    GOODS_ICON_121001                      = app.anniversaryMgr:GetResPath('arts/goods/goods_icon_121001.png'),
    SUMMER_ACTIVITY_EGG_EXTRA_BAR_ACTIVE   = app.anniversaryMgr:GetResPath('ui/home/activity/summerActivity/carnie/summer_activity_egg_extra_bar_active.png'),
    SUMMER_ACTIVITY_EGG_EXTRA_BAR_ACTIVE_2 = app.anniversaryMgr:GetResPath('ui/anniversary/annversary_activity_egg_extra_bar_active_2.png'),
    COMMON_BG_TIPS_COMMON                  = app.anniversaryMgr:GetResPath('ui/common/common_bg_tips_common.png'),
    COOKING_GRADE_ICO_4                    = app.anniversaryMgr:GetResPath('ui/home/kitchen/cooking_grade_ico_4.png'),
    COOKING_LEVEL_UP_ICO_ARROW             = app.anniversaryMgr:GetResPath('ui/home/kitchen/cooking_level_up_ico_arrow.png'),
    COOKING_GRADE_ICO_5                    = app.anniversaryMgr:GetResPath('ui/home/kitchen/cooking_grade_ico_5.png'),
}
local anniversaryManager = app.anniversaryMgr
function AnniversaryBuySecrentView:ctor( param  )
    local param = param or {}
    self.shopId = param.shopId or  1
    self:InitUI()
    self:UpdateUI()
end
function AnniversaryBuySecrentView:InitUI()
    local view = newLayer(display.cx, display.cy,{ap = display.CENTER, size = display.size})
    self:addChild(view)
    local titlePanel = require('common.TitlePanelBg').new({ title = app.anniversaryMgr:GetPoText(__('购买')), type = 7, offsetX = -2  , offsetY = 2  })
    titlePanel:setPosition(display.center)
    titlePanel.viewData.eaterLayer:setOnClickScriptHandler(function()
        self:removeFromParent()
    end)
    self:addChild(titlePanel)
    local contentLayer = newLayer(418, 132,
                                  { ap = display.LEFT_BOTTOM, size = cc.size(500, 480), enable = true })
    titlePanel.viewData.view:addChild(contentLayer,2 )

    contentLayer:setPosition(30,0)
    local lineImage = newNSprite(RES_DICT.ANNI_MAPS_SHOP_LINE, 250, 325,
                                 { ap = display.CENTER, tag = 165 })
    lineImage:setScale(1, 1)
    contentLayer:addChild(lineImage)

    local bgImage = newImageView(RES_DICT.COMMON_BG_TIPS_COMMON, 247, 184,
                                 { ap = display.CENTER, tag = 167, enable = false, scale9 = true, size = cc.size(492, 200) })
    contentLayer:addChild(bgImage)

    local addExpLabel = newLabel(251, 307,
                                 { ap = display.CENTER, color = '#af1121', text = "", fontSize = 20, tag = 168 })
    contentLayer:addChild(addExpLabel)

    local secrentName = newLabel(251, 350,
                                 fontWithColor('14', { ap = display.CENTER, outline = false, ttf = true, font = TTF_GAME_FONT, color = '#af1121', fontSize = 24, text = "", tag = 169 }))
    contentLayer:addChild(secrentName)

    local secrentBgImage = newImageView(RES_DICT.SHIP_ICO_LABEL_GOODS_TAG, 247, 424,
                                        { ap = display.CENTER, tag = 170, enable = false })
    contentLayer:addChild(secrentBgImage)

    local secrentImage = newImageView(RES_DICT.GOODS_ICON_121001, 247, 424,
                                      { ap = display.CENTER, tag = 171, enable = false })
    contentLayer:addChild(secrentImage)

    local recipeName = newLabel(108, 139,
                                { ap = display.CENTER, color = '#af1121', text = "", fontSize = 20, tag = 172 })
    contentLayer:addChild(recipeName)

    local recipeImage = newImageView(RES_DICT.GOODS_ICON_121001, 114, 208,
                                     { ap = display.CENTER, tag = 173, enable = false })
    contentLayer:addChild(recipeImage)

    local prograsssBgImage = newImageView(RES_DICT.SUMMER_ACTIVITY_EGG_EXTRA_BAR_GREY, 324, 182,
                                          { ap = display.CENTER, tag = 174, enable = false })
    contentLayer:addChild(prograsssBgImage)
    local prograssTwo = CProgressBar:create(RES_DICT.SUMMER_ACTIVITY_EGG_EXTRA_BAR_ACTIVE_2)
    prograssTwo:setAnchorPoint(cc.p(0.5, 0.5))
    prograssTwo:setPosition(324, 182)
    prograssTwo:setMaxValue(100)
    prograssTwo:setValue(0)
    prograssTwo:setScale(1, 1)
    prograssTwo:setDirection(eProgressBarDirectionLeftToRight)
    contentLayer:addChild(prograssTwo)

    local prograss = CProgressBar:create(RES_DICT.SUMMER_ACTIVITY_EGG_EXTRA_BAR_ACTIVE)
    prograss:setAnchorPoint(cc.p(0.5, 0.5))
    prograss:setPosition(324, 182)
    prograss:setMaxValue(100)
    prograss:setValue(0)
    prograss:setScale(1, 1)
    prograss:setDirection(eProgressBarDirectionLeftToRight)
    contentLayer:addChild(prograss)


    local buyBtn = newButton(247, 39, { ap = display.CENTER ,  n = RES_DICT.COMMON_BTN_ORANGE, d = RES_DICT.COMMON_BTN_ORANGE, s = RES_DICT.COMMON_BTN_ORANGE, scale9 = true, size = cc.size(123, 62), tag = 176 })
    display.commonLabelParams(buyBtn, {text = "", fontSize = 14, color = '#414146'})
    contentLayer:addChild(buyBtn)
    local buyBtnSize = buyBtn:getContentSize()
    local richLabel = display.newRichLabel(buyBtnSize.width/2 ,buyBtnSize.height/2 , {
        c = {
            fontWithColor('14' , {text = ""})
        }
    })
    buyBtn:addChild(richLabel)

    local expValueLabel = newLabel(315, 140,
                                   { ap = display.CENTER, color = '#af1121', text = "", fontSize = 20, tag = 177 })
    contentLayer:addChild(expValueLabel)

    local recipeLevelImage = newImageView(RES_DICT.COOKING_GRADE_ICO_4, 333, 228,
                                          { ap = display.CENTER, tag = 257, enable = false })
    contentLayer:addChild(recipeLevelImage)

    local upadeLayout = newLayer(338, 229,
                                 { ap = display.CENTER, color = cc.r4b(0), size = cc.size(200, 50), enable = true })
    contentLayer:addChild(upadeLayout)

    local currentLevel = newImageView(RES_DICT.COOKING_GRADE_ICO_4, 52, 22,
                                      { ap = display.CENTER, tag = 179, enable = false })
    upadeLayout:addChild(currentLevel)

    local nextLevel = newImageView(RES_DICT.COOKING_GRADE_ICO_5, 135, 22,
                                   { ap = display.CENTER, tag = 180, enable = false })
    upadeLayout:addChild(nextLevel)

    local oneImage = newImageView(RES_DICT.COOKING_LEVEL_UP_ICO_ARROW, 84, 19,
                                  { ap = display.CENTER, tag = 182, enable = false })
    upadeLayout:addChild(oneImage)

    local twoImage = newImageView(RES_DICT.COOKING_LEVEL_UP_ICO_ARROW, 94, 19,
                                  { ap = display.CENTER, tag = 183, enable = false })
    upadeLayout:addChild(twoImage)

    local threeImage = newImageView(RES_DICT.COOKING_LEVEL_UP_ICO_ARROW, 104, 19,
                                    { ap = display.CENTER, tag = 184, enable = false })
    upadeLayout:addChild(threeImage)

    self.viewData =  {
        contentLayer            = contentLayer,
        lineImage               = lineImage,
        bgImage                 = bgImage,
        addExpLabel             = addExpLabel,
        secrentName             = secrentName,
        secrentBgImage          = secrentBgImage,
        secrentImage            = secrentImage,
        recipeName              = recipeName,
        recipeImage             = recipeImage,
        prograsssBgImage        = prograsssBgImage,
        prograss                = prograss,
        buyBtn                  = buyBtn,
        expValueLabel           = expValueLabel,
        recipeLevelImage        = recipeLevelImage,
        upadeLayout             = upadeLayout,
        currentLevel            = currentLevel,
        nextLevel               = nextLevel,
        oneImage                = oneImage,
        twoImage                = twoImage,
        prograssTwo                = prograssTwo,
        threeImage              = threeImage,
        richLabel              = richLabel,
    }
end
function AnniversaryBuySecrentView:UpdateUI()
    local shopId = self.shopId
    local parserConfig = anniversaryManager:GetConfigParse()
    local blackRecipMarketConfig = anniversaryManager:GetConfigDataByName(parserConfig.TYPE.BLACK_RECIPE_MARKET)
    local recipeAttrConfig = anniversaryManager:GetConfigDataByName(parserConfig.TYPE.FOOD_ATTR)
    local blackRecipeMarketData = blackRecipMarketConfig[tostring(shopId)] or {}
    local consumeData = blackRecipeMarketData.consume[1]  or {}
    local recipeOneConfig = recipeAttrConfig[tostring(blackRecipeMarketData.foodId)]
    local recipeLevelConfig =  anniversaryManager:GetConfigDataByName(parserConfig.TYPE.FOOD_LEVEL)
    local viewData = self.viewData 
    local recipeName = viewData.recipeName
    local secrentImage = viewData.secrentImage
    local addExpLabel = viewData.addExpLabel
    local secrentName = viewData.secrentName
    local recipeImage = viewData.recipeImage
    local prograss = viewData.prograss
    local prograssTwo = viewData.prograssTwo
    local expValueLabel = viewData.expValueLabel
    local richLabel = viewData.richLabel
    local path = anniversaryManager:GetAnniversaryRecipePathByRecipId(blackRecipeMarketData.foodId)
    secrentImage:setTexture(path)
    secrentImage:setScale(0.6)
    local recipePath = anniversaryManager:GetAnniversaryRecipePathByRecipId(blackRecipeMarketData.foodId)
    recipeImage:setTexture(recipePath)
    display.commonLabelParams(secrentName , {text = blackRecipeMarketData.name})
    display.commonLabelParams(recipeName , {text = recipeOneConfig.name  })
    display.commonLabelParams(addExpLabel , {text = string.format(app.anniversaryMgr:GetPoText(__('熟练度 + %d ')) , checkint(blackRecipeMarketData.exp)) })

    if isElexSdk() or isKoreanSdk() or isJapanSdk() then
        recipeName:setPositionY(recipeImage:getPositionY() - recipeImage:getContentSize().height / 2 * recipeImage:getScale() - 6)
    end

    local recipes  = anniversaryManager.homeData.recipes or {}
    local currentExp =  checkint(recipes[tostring( blackRecipeMarketData.foodId)])
    local countLevel  = table.nums(recipeLevelConfig)
    local currentLevel = anniversaryManager:GetRecipeLevelByExp(currentExp)
    local recipeLevelImage = viewData.recipeLevelImage
    local upadeLayout = viewData.upadeLayout
    recipeLevelImage:setVisible(true)
    upadeLayout:setVisible(true)
    local level = 1
    if currentLevel == countLevel  then
        level = countLevel
    else
        level = currentLevel + 1
    end
    local recipeLevelOneConfig = recipeLevelConfig[tostring(level)]
    local maxValue = checkint(recipeLevelOneConfig.exp)
    prograss:setMaxValue(maxValue)
    prograssTwo:setMaxValue(maxValue)
    local valueTwo  = (currentExp + checkint(blackRecipeMarketData.exp) )  > maxValue and maxValue or   (currentExp + checkint(blackRecipeMarketData.exp))
    local valueOne  = currentExp  > maxValue and maxValue or  currentExp
    prograssTwo:setValue(valueTwo)
    prograss:setValue(valueOne)
    display.commonLabelParams(expValueLabel ,{text = string.format(app.anniversaryMgr:GetPoText(__('熟练度： %d+%d') ), currentExp ,   checkint(blackRecipeMarketData.exp))})
    display.reloadRichLabel(richLabel , { c=  {
        fontWithColor('14' , {text = consumeData.num } ) ,
        {img = CommonUtils.GetGoodsIconPathById(consumeData.goodsId ) , scale = 0.2  }
    }})
    if currentExp + checkint(blackRecipeMarketData.exp)  >= maxValue and countLevel > currentLevel  then
        recipeLevelImage:setVisible(false)
        local currentLevelImage  = viewData.currentLevel
        local nextLevelImage  = viewData.nextLevel
        currentLevelImage:setTexture(app.anniversaryMgr:GetResPath(string.format('ui/home/kitchen/cooking_grade_ico_%d.png' , checkint(currentLevel) ) ))
        nextLevelImage:setTexture(app.anniversaryMgr:GetResPath(string.format('ui/home/kitchen/cooking_grade_ico_%d.png' , checkint(level) ) ))
    else
        upadeLayout:setVisible(false)
        recipeLevelImage:setTexture(app.anniversaryMgr:GetResPath(string.format('ui/home/kitchen/cooking_grade_ico_%d.png' , checkint(currentLevel) ) ))
    end
    CommonUtils.AddRichLabelTraceEffect(richLabel)
    local buyBtn = viewData.buyBtn
    buyBtn:setOnClickScriptHandler(function()
        local consumeData = blackRecipeMarketData.consume[1] or {}
        local goodsId = consumeData.goodsId or GOLD_ID
        local ownerNum = CommonUtils.GetCacheProductNum(goodsId)
        if ownerNum < checkint(consumeData.num)   then
            if GAME_MODULE_OPEN.NEW_STORE and checkint(goodsId) == DIAMOND_ID then
                app.uiMgr:showDiamonTips()
            else
                app.uiMgr:ShowInformationTips(app.anniversaryMgr:GetPoText(__('道具不足')))
            end
            return
        end
        app:DispatchSignal(POST.ANNIVERSARY_BLACK_HEART_RECIPE_SHOP.cmdName  , {shopId = shopId })
        self:removeFromParent()
    end)
end
return AnniversaryBuySecrentView
