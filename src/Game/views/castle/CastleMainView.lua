---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2019/3/1 4:28 PM
---
local GameScene = require('Frame.GameScene')
---@class CastleMainView
local CastleMainView = class('CastleMainView', GameScene)
local newImageView = display.newImageView
local newLabel = display.newLabel
local newNSprite = display.newNSprite
local newButton = display.newButton
local newLayer = display.newLayer
local RES_DICT = {
    COMMON_BTN_TIPS               = app.activityMgr:CastleResEx('ui/common/common_btn_tips.png'),
    CASTLE_MAIN_BTN_ENTER         = app.activityMgr:CastleResEx('ui/castle/main/castle_main_btn_enter.png'),
    CASTLE_MAP_BG                 = app.activityMgr:CastleResEx('ui/castle/battleMaps/castle_map_bg.png'),
    CASTLE_MAIN_UP_LABEL          = app.activityMgr:CastleResEx('ui/castle/main/castle_main_up_label.png'),
    CASTLE_MAP_ICO_2              = app.activityMgr:CastleResEx('ui/castle/battleMaps/castle_map_ico_2.png'),
    CASTLE_MAP_ICO_1              = app.activityMgr:CastleResEx('ui/castle/battleMaps/castle_map_ico_1.png'),
    CASTLE_MAIN_POINT_BAR_ACTIVE  = app.activityMgr:CastleResEx('ui/castle/main/castle_main_point_bar_active.png'),
    CASTLE_MAIN_BTN_POINT         = app.activityMgr:CastleResEx('ui/castle/main/castle_main_btn_point.png'),
    CASTLE_MAIN_BG_CORNER         = app.activityMgr:CastleResEx('ui/castle/main/castle_main_bg_corner.png'),
    CASTLE_MAIN_BTN_DRAW          = app.activityMgr:CastleResEx('ui/castle/main/castle_main_btn_draw.png'),
    CASTLE_MAP_ICO_3              = app.activityMgr:CastleResEx('ui/castle/battleMaps/castle_map_ico_3.png'),
    GOODS_ICON_121001             = app.activityMgr:CastleResEx('arts/goods/goods_icon_121001.png'),
    ANIME_CASTLE_ENTER            = app.activityMgr:CastleResEx('ui/castle/main/anime_castle_enter.png'),
    CASTLE_MAIN_BG_BAR            = app.activityMgr:CastleResEx('ui/castle/main/castle_main_bg_bar.png'),
    COMMON_BTN_BACK               = app.activityMgr:CastleResEx('ui/common/common_btn_back.png'),
    CASTLE_MAIN_UP_FLAG           = app.activityMgr:CastleResEx('ui/castle/main/castle_main_up_flag.png'),
    CASTLE_MAIN_BTN_RANK          = app.activityMgr:CastleResEx('ui/castle/main/castle_main_btn_rank.png'),
    CASTLE_MAP_ICO_4              = app.activityMgr:CastleResEx('ui/castle/battleMaps/castle_map_ico_4.png'),
    CASTLE_MAIN_POINT_BAR_GREY    = app.activityMgr:CastleResEx('ui/castle/main/castle_main_point_bar_grey.png'),
    CASTLE_MAIN_BTN_KEYS          = app.activityMgr:CastleResEx('ui/castle/main/castle_main_btn_keys.png'),
    CASTLE_MAIN_DOOR              = app.activityMgr:CastleSpnEx('ui/castle/effect/castle_main_door' ).path,
    COMMON_TITLE                  = app.activityMgr:CastleResEx('ui/common/common_title.png'),
}

function CastleMainView:ctor(params )
    GameScene.ctor(self,'views.castle.CastleMainView')
    self:InitUI()
end

function CastleMainView:InitUI(  )
    local mainPos = app.activityMgr:GetCastleMainPos()
    local view = newLayer(display.cx, display.cy,{ap = display.CENTER, size = display.size})
    self:addChild(view)
    local bgLayout = newLayer(667, 375, { ap = display.CENTER})
    bgLayout:setPosition(display.cx + 0, display.cy + 0)
    view:addChild(bgLayout)
    local bgImage = newNSprite(RES_DICT.CASTLE_MAP_BG, display.cx , display.cy ,
                               { ap = display.CENTER, tag = 756 })
    bgImage:setScale(1, 1)
    bgLayout:addChild(bgImage)
    local mainDoor =  sp.SkeletonAnimation:create(
            RES_DICT.CASTLE_MAIN_DOOR ..  ".json",
            RES_DICT.CASTLE_MAIN_DOOR ..   ".atlas",
        1)
    bgLayout:addChild(mainDoor)
    mainDoor:setAnchorPoint(display.CENTER)
    mainDoor:setPosition(display.cx + 0, 178)
    mainDoor:setAnimation(0,'idle',true)

    local enterBtn = display.newButton(display.cx  , 103,{ap = display.CENTER_BOTTOM , color = cc.c4b(0,0,0,0) , size = cc.size(400, 300 )})
    enterBtn:setContentSize(cc.size(400, 300 ))
    view:addChild(enterBtn)
    --enterBtn:setTouchEnabled(true)
    local enterBtnTitle = newButton(200  , 15 , { ap = display.CENTER ,  n = RES_DICT.CASTLE_MAIN_BTN_ENTER, d = RES_DICT.CASTLE_MAIN_BTN_ENTER, s = RES_DICT.CASTLE_MAIN_BTN_ENTER, scale9 = true, size = cc.size(355, 84), tag = 758 })
    display.commonLabelParams(enterBtnTitle, fontWithColor(14, {text = app.activityMgr:GetCastleText(__('进入古堡')), offset = cc.p(0,5),fontSize = 30, outline = '#420505' ,outlineSize = 2, color = '#ffffff'}))
    enterBtn:addChild(enterBtnTitle)
    local bottomLine = newLayer(display.cx , 0,
                                { ap = display.CENTER_BOTTOM, size = cc.size(display.width, 56) })
    view:addChild(bottomLine)

    local scaleImage = newImageView(RES_DICT.CASTLE_MAIN_BG_BAR, 667, 0,
                                    { ap = display.CENTER_BOTTOM, tag = 464, enable = false, scale9 = true, size = cc.size(1334, 64) })
    bottomLine:addChild(scaleImage)

    local prograssLayout = newLayer(display.cx -3 , 25,
                                    { ap = display.CENTER, color = cc.r4b(0), size = cc.size(500, 50), enable = true })
    bottomLine:addChild(prograssLayout)

    local prograssBgImage = newNSprite(RES_DICT.CASTLE_MAIN_POINT_BAR_GREY, 265, 25,
                                       { ap = display.CENTER, tag = 466   })
    prograssBgImage:setScale(1, 1)
    prograssLayout:addChild(prograssBgImage)

    local prograss = CProgressBar:create(RES_DICT.CASTLE_MAIN_POINT_BAR_ACTIVE)
    prograss:setAnchorPoint(display.CENTER)
    prograss:setPosition(265, 25)
    prograss:setMaxValue(100)
    prograss:setValue(0)
    prograss:setScale(1, 1)
    prograss:setDirection(eProgressBarDirectionLeftToRight)
    prograssLayout:addChild(prograss,10 )

    local prograssLabel = newLabel(265, 25,
                                   { ap = display.CENTER, color = '#ffffff', text = "", fontSize = 20, tag = 468 })
    prograssLayout:addChild(prograssLabel , 100)

    local prograssIcon = newImageView(RES_DICT.GOODS_ICON_121001, 25, 24,
                                      { ap = display.CENTER, tag = 469, enable = false, scale = 0.2 })
    prograssLayout:addChild(prograssIcon)

    local rightBottomLayout = newLayer(1394, 0,
                                       { ap = display.RIGHT_BOTTOM, color = cc.r4b(0), size = cc.size(433, 237), enable = true })
    rightBottomLayout:setPosition(display.SAFE_R + 60, 0)
    view:addChild(rightBottomLayout)

    local drawImage = newNSprite(RES_DICT.CASTLE_MAIN_BTN_DRAW, 229, 142,
                                 { ap = display.CENTER, tag = 455 })
    drawImage:setScale(1, 1)
    rightBottomLayout:addChild(drawImage)

    local rightConrner = newNSprite(RES_DICT.CASTLE_MAIN_BG_CORNER, 0, 0,
                                    { ap = display.LEFT_BOTTOM, tag = 454 })
    rightConrner:setScale(1, 1)
    rightBottomLayout:addChild(rightConrner)

    local rightModuleName = newLabel(mainPos.rightModulePos.x, mainPos.rightModulePos.y,
                                     fontWithColor(14,{ ap = display.CENTER, color = '#ffffff', text = app.activityMgr:GetCastleText(__('记忆之宿')), fontSize = 24, outline = '#420505' ,outlineSize = 2}))
    rightBottomLayout:addChild(rightModuleName)



    local redIcon = display.newImageView(app.activityMgr:CastleResEx('ui/common/common_hint_circle_red_ico.png') , 330, 40)
    rightBottomLayout:addChild(redIcon,10)
    redIcon:setName("redIcon")
    redIcon:setVisible(false)


    local leftBottomLayout = newLayer(-59, 3,
                                      { ap = display.LEFT_BOTTOM, color = cc.r4b(0), size = cc.size(433, 237), enable = true })
    leftBottomLayout:setPosition(display.SAFE_L + -59, 3)
    view:addChild(leftBottomLayout)

    local mainPointIMage = newNSprite(RES_DICT.CASTLE_MAIN_BTN_POINT, 207, 142,
                                      { ap = display.CENTER, tag = 459 })
    mainPointIMage:setScale(1, 1)
    leftBottomLayout:addChild(mainPointIMage)

    local leftConrner = newNSprite(RES_DICT.CASTLE_MAIN_BG_CORNER, 433, 0,
                                   { ap = display.LEFT_BOTTOM, tag = 460 })
    leftConrner:setScale(-1, 1)
    leftBottomLayout:addChild(leftConrner)
    local redIcon = display.newImageView(app.activityMgr:CastleResEx('ui/common/common_hint_circle_red_ico.png') , 330, 40)
    leftBottomLayout:addChild(redIcon,10)
    redIcon:setName("redIcon")
    redIcon:setVisible(false)

    local leftModuleName = newLabel(mainPos.leftModulePos.x, mainPos.leftModulePos.y, fontWithColor(14,{  ap = display.CENTER, color = '#ffffff', text = app.activityMgr:GetCastleText(__('记忆枷锁')), fontSize = 24, outline = '#420505' ,outlineSize = 2 }))
    leftBottomLayout:addChild(leftModuleName)



    local topLayout = newLayer(display.SAFE_R, display.height,
                               { ap = display.RIGHT_TOP, size = cc.size(277, 150)})
    topLayout:setPosition(display.SAFE_R - 18 , display.height + 0)
    view:addChild(topLayout)

    local RankBtn = newButton(208, 89, { ap = display.CENTER ,  n = RES_DICT.CASTLE_MAIN_UP_FLAG, d = RES_DICT.CASTLE_MAIN_UP_FLAG, s = RES_DICT.CASTLE_MAIN_UP_FLAG, tag = 748  })
    display.commonLabelParams(RankBtn, {text = "", fontSize = 14, color = '#414146'})
    topLayout:addChild(RankBtn)

    local rankImage = newNSprite(RES_DICT.CASTLE_MAIN_BTN_RANK, 63, 44,
                                 { ap = cc.p(0.541900 ,0.330800) , tag = 749 })
    rankImage:setScale(1, 1)
    RankBtn:addChild(rankImage)

    local rankName = newButton(63, 5, { ap = display.CENTER ,  n = RES_DICT.CASTLE_MAIN_UP_LABEL, d = RES_DICT.CASTLE_MAIN_UP_LABEL, s = RES_DICT.CASTLE_MAIN_UP_LABEL, scale9 = true, size = cc.size(130, 39), tag = 751 })
    display.commonLabelParams(rankName, fontWithColor(14,{text = app.activityMgr:GetCastleText(__('排名奖励')), fontSize = 22, outline = '#420505' ,outlineSize = 2, color = '#ffffff', hAlign = display.TAC, w = 160}))
    RankBtn:addChild(rankName)

    local rewardBtn = newButton(78, 89, { ap = display.CENTER ,  n = RES_DICT.CASTLE_MAIN_UP_FLAG, d = RES_DICT.CASTLE_MAIN_UP_FLAG, s = RES_DICT.CASTLE_MAIN_UP_FLAG, tag = 752 })
    display.commonLabelParams(rewardBtn, {text = "", fontSize = 14, color = '#414146'})
    topLayout:addChild(rewardBtn)

    local redIcon = display.newImageView(app.activityMgr:CastleResEx('ui/common/common_hint_circle_red_ico.png') , 100, 100)
    rewardBtn:addChild(redIcon,10)
    redIcon:setName("redIcon")
    redIcon:setVisible(false)

    local rewardImage = newNSprite(RES_DICT.CASTLE_MAIN_BTN_KEYS, 63, 44,
                                   { ap = cc.p(0.541900 ,0.330800) , tag = 753 })
    rewardImage:setScale(1, 1)
    rewardBtn:addChild(rewardImage)

    local rewardName = newButton(63, 5, { ap = display.CENTER ,  n = RES_DICT.CASTLE_MAIN_UP_LABEL, d = RES_DICT.CASTLE_MAIN_UP_LABEL, s = RES_DICT.CASTLE_MAIN_UP_LABEL, scale9 = true, size = cc.size(130, 39), tag = 754 })
    display.commonLabelParams(rewardName, fontWithColor(14,fontWithColor(14,{text = app.activityMgr:GetCastleText(__('领取钥匙')), fontSize = 22, outline = '#420505' ,outlineSize = 2, color = '#ffffff', hAlign = display.TAC, w = 160})))
    rewardBtn:addChild(rewardName)

    local backBtn = newButton(59, 695, { ap = display.CENTER ,  n = RES_DICT.COMMON_BTN_BACK, d = RES_DICT.COMMON_BTN_BACK, s = RES_DICT.COMMON_BTN_BACK, scale9 = true, size = cc.size(90, 70), tag = 765 })
    display.commonLabelParams(backBtn, {text = "", fontSize = 14, color = '#414146'})
    backBtn:setPosition(display.SAFE_L + 59, display.height + -55)
    view:addChild(backBtn)


    local tabNameLabel = display.newButton(97, 744, { ap = display.LEFT_TOP ,  n = RES_DICT.COMMON_TITLE, d = RES_DICT.COMMON_TITLE, s = RES_DICT.COMMON_TITLE, scale9 = true, size = cc.size(303, 78) })
    display.commonLabelParams(tabNameLabel, {text = "" , fontSize = 14, color = '#414146'})
    tabNameLabel:setPosition(display.SAFE_L + 130, display.size.height)
    view:addChild(tabNameLabel ,101)

    local moduleName = display.newLabel(138-15, 30,
                                        fontWithColor('14' , { outline = false ,  ap = display.CENTER, color = '#5b3c25', text =  app.activityMgr:GetCastleText(__("古堡迷踪")), fontSize = 30, tag = 71 , reqW= 190  }))
    tabNameLabel:addChild(moduleName)

    local tipButton = display.newNSprite(RES_DICT.COMMON_BTN_TIPS, 237, 30,
                                         { ap = display.CENTER, tag = 72 })
    tipButton:setScale(1, 1)
    tabNameLabel:addChild(tipButton)

    local tabNameLabelPos = cc.p(tabNameLabel:getPosition())
    tabNameLabel:setPositionY(display.height + 100)
    local action = cc.EaseBounceOut:create(cc.MoveTo:create(1, tabNameLabelPos))
    tabNameLabel:runAction( action )
    rightBottomLayout:setVisible(false)
    leftBottomLayout:setVisible(false)
    enterBtn:setVisible(false)
    mainDoor:setVisible(false)
    bottomLine:setVisible(false)

    self.viewData =  {
        bgLayout                = bgLayout,
        mainDoor                = mainDoor ,  
        bgImage                 = bgImage,
        enterBtn                = enterBtn,
        bottomLine              = bottomLine,
        scaleImage              = scaleImage,
        prograssLayout          = prograssLayout,
        prograssBgImage         = prograssBgImage,
        prograss                = prograss,
        prograssLabel           = prograssLabel,
        prograssIcon            = prograssIcon,
        rightBottomLayout       = rightBottomLayout,
        drawImage               = drawImage,
        rightConrner            = rightConrner,
        rightModuleName         = rightModuleName,
        leftBottomLayout        = leftBottomLayout,
        mainPointIMage          = mainPointIMage,
        leftConrner             = leftConrner,
        leftModuleName          = leftModuleName,
        topLayout               = topLayout,
        RankBtn                 = RankBtn,
        rankImage               = rankImage,
        rankName                = rankName,
        rewardBtn               = rewardBtn,
        rewardImage             = rewardImage,
        rewardName              = rewardName,
        backBtn                 = backBtn,
        tabNameLabel            = tabNameLabel,
    }
end
--==============================--
---@Description: 更新进度
---@author : xingweihao
---@date : 2019/3/4 7:36 PM
--==============================--

function CastleMainView:UpdatePrograss()
    ---@type SpringActivityConfigParser
    local SpringActivityConfigParser = require('Game.Datas.Parser.SpringActivityConfigParser').new()
    local goodsPointMainShowConfig = CommonUtils.GetConfigAllMess(SpringActivityConfigParser.TYPE.GOODS_POINT_MAIN_SHOW , "springActivity")
    local goodsId  = DIAMOND_ID
    local totalValue = 100
    for key , goodsData  in pairs(goodsPointMainShowConfig) do
        totalValue = checkint(goodsData.limit)
        goodsId = goodsData.goodsId
        break
    end
    local prograssValue = CommonUtils.GetCacheProductNum(goodsId)
    local goodsPath = CommonUtils.GetGoodsIconPathById(goodsId)
    ---@type CastleMainView
    local viewData = self.viewData
    local prograssIcon = viewData.prograssIcon
    prograssValue = prograssValue < totalValue and prograssValue or totalValue
    viewData.prograss:setMaxValue(totalValue)
    viewData.prograss:setValue(prograssValue)
    prograssIcon:setTexture(goodsPath)
    display.commonLabelParams(viewData.prograssLabel , {text = string.format("%d/%d" ,prograssValue , totalValue ) })
end
function CastleMainView:SetMemoriesLightVisible(isVisible)
    local viewData = self.viewData
    local rightBottomLayout = viewData.rightBottomLayout
    local redIcon = rightBottomLayout:getChildByName("redIcon")
    redIcon:setVisible(isVisible)
end
function CastleMainView:SetMemoriesLockVisible(isVisible)
    local viewData = self.viewData
    local rightBottomLayout = viewData.leftBottomLayout
    local redIcon = rightBottomLayout:getChildByName("redIcon")
    redIcon:setVisible(isVisible)
end
function CastleMainView:EnterMainAction()
    local viewData = self.viewData
    local backBtn = viewData.backBtn
    local tabNameLabel = viewData.tabNameLabel
    local topLayout = viewData.topLayout
    local getTargetAction = function(node , isSelf)
        local targetedAction = nil
        local sequence = cc.Sequence:create(
                cc.Spawn:create(
                    cc.EaseBackOut:create(
                            cc.MoveTo:create(0.5 , cc.p(node:getPositionX() , node:getPositionY()) )
                    ),
                     cc.FadeIn:create(0.5)
                )
        )
        if isSelf == 1 then
            targetedAction = sequence
        else
            targetedAction =  cc.TargetedAction:create(node ,
                    sequence
            )
        end
        return targetedAction
    end
    topLayout:stopAllActions()
    topLayout:runAction(
        cc.Sequence:create(
            cc.CallFunc:create(function()
                local backBtnPos = cc.p(backBtn:getPosition())
                local tabNameLabelPos = cc.p(tabNameLabel:getPosition())
                local topLayoutPos = cc.p(topLayout:getPosition())
                backBtn:setPosition(backBtnPos.x , backBtnPos.y + 50  )
                tabNameLabel:setPosition(tabNameLabelPos.x , tabNameLabelPos.y + 50  )
                topLayout:setPosition(topLayoutPos.x , topLayoutPos.y + 50  )
                backBtn:setOpacity(0)
                tabNameLabel:setOpacity(0)
                topLayout:setOpacity(0)
            end),
            cc.Spawn:create(
                getTargetAction(backBtn),
                getTargetAction(tabNameLabel),
                getTargetAction(topLayout , 1)
            )
        )
    )

end
---==============================--
---@Description: 设置UI 是否可见
--==============================--
function CastleMainView:SetUIIsVisible(isVisible)
    local viewData = self.viewData
    viewData.rightBottomLayout:setVisible(isVisible)
    viewData.leftBottomLayout:setVisible(isVisible)
    viewData.enterBtn:setVisible(isVisible)
    viewData.mainDoor:setVisible(isVisible)
    viewData.bottomLine:setVisible(isVisible)
end

return CastleMainView
