---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zxr.
--- DateTime: 2020/2/26 4:14 下午
---
---@class PresetTeamEditTeamView
local PresetTeamEditTeamView = class('PresetTeamView', function ()
    local node = CLayout:create(display.size)
    node.name = 'Game.views.presetTeam.PresetTeamEditTeamView'
    node:enableNodeEvents()
    return node
end)

------------ import ------------
---@type PresetTeamCell
local PresetTeamCell = require('Game.views.presetTeam.PresetTeamCell')
------------ import ------------

------------ define ------------
local app = app
local display = display
local cc = cc
local CreateView     = nil
local CreateTeamCell = nil


local PRESET_TEAM_CHANGE_SIGNAL_NAME = "PRESET_TEAM_CHANGE_SIGNAL_NAME"

local RES_DICT = {
    COMMON_BTN_BACK      = _res('ui/common/common_btn_back.png'),
    ORDER_TEAM_BG        = _res("ui/tagMatch/3v3_order_bg_team.png"),
    ATTACKTEAM_TITLE     = _res('ui/common/common_title_5.png'),
    --                   = team cell
    ATTACKTEAM_NUM       = _res("ui/tagMatch/3v3_attackteam_num.png"),
    ATTACKTEAM_BG_TEAM   = _res("ui/tagMatch/team_frame_touxiangkuang.png"),
    ATTACKTEAM_BG_TEAM_S = _res("ui/tagMatch/team_img_touxiangkuang_xuanzhong.png"),
    ATTACKTEAM_MEMBER_BG = _res("ui/tagMatch/3v3_attackteam_member_bg.png"),
}

------------ define ------------


function PresetTeamEditTeamView:ctor( ... )
    self.args = unpack({...}) or {}
    self:InitUI()
end
--[[
init ui
--]]
function PresetTeamEditTeamView:InitUI()
    xTry(function ( )

        local selectedCards = self.args.selectedCards
        local presetTeamType = self.args.presetTeamType
        self.viewData_ = CreateView(selectedCards, presetTeamType, self.args.cardCount, self.args.maxTeamCount)
        self:addChild(self.viewData_.view)
    end, __G__TRACKBACK__)
end


CreateTeamCell = function(cellParent)
    local view = cellParent
    local size = cellParent:getContentSize()
    local cpos = cc.sizep(size, ui.cc)

    local indexImage = ui.image({img = RES_DICT.ATTACKTEAM_NUM, ap = ui.lt})
    view:addList(indexImage):alignTo(nil, ui.lt, {offsetY = -30})

    local indexLabel = ui.bmfLabel({path = FONT.BMF_TEXT_W, ap = ui.lc})
    view:addList(indexLabel):alignTo(indexImage, ui.lc, {offsetX = 5})

    local headGroup = view:addList({
        ui.image({img = RES_DICT.ATTACKTEAM_BG_TEAM}),
        ui.cardHeadNode({scale = 0.5}),
        ui.image({img = RES_DICT.ATTACKTEAM_BG_TEAM_S}),
        ui.layer({color = cc.r4b(0), ap = ui.cc, size = cc.size(size.height, size.height), enable = true}),
    })
    ui.flowLayout(cc.rep(cpos, 20, 0), headGroup, {type = ui.flowC, ap = ui.cc})

    local memberGroup = view:addList({
        ui.image({img = RES_DICT.ATTACKTEAM_MEMBER_BG}),
        ui.label({fnt = FONT.D9, color = '#000000', ap = ui.cc, mt = 2}),
    })
    ui.flowLayout(cc.rep(cpos, 20, -40), memberGroup, {type = ui.flowC, ap = ui.cc})
    
    return {
        view        = view,
        indexLabel  = indexLabel,
        headNode    = headGroup[2],
        selectImg   = headGroup[3],
        clickArea   = headGroup[4],
        memberLabel = memberGroup[2],
    }
end


CreateView = function (selectedCards, presetTeamType, cardCount, maxTeamCount)
    local view = display.newLayer()
    local size = view:getContentSize()

    local backBtn = display.newButton(30 + display.SAFE_L, display.height - 18, { n = RES_DICT.COMMON_BTN_BACK, ap = cc.p(0, 1) })
    view:addChild(backBtn, 10)

    local shadowsLayer = display.newLayer(0, 0, {enable = true, color = cc.c4b( 0, 0, 0, 130)})
    view:addChild(shadowsLayer)

    local cell = PresetTeamCell.new({presetTeamType = presetTeamType, isEditMode = true})
    display.commonUIParams(cell, {ap = display.CENTER, po = cc.p(size.width * 0.5, display.cy + 180)})
    view:addChild(cell)

    -------------------------------------------------
    -- right
    local rightLayer = ui.layer()
    rightLayer:setVisible(checkint(maxTeamCount) > 1)
    view:add(rightLayer)
    
    local teamLayerPos  = cc.p(display.SAFE_R - 10, size.height/2 - 60)
    local teamLayerSize = cc.size(210, size.height - teamLayerPos.y)
    local teamLayerNode = ui.layer({p = teamLayerPos, bg = RES_DICT.ORDER_TEAM_BG, size = teamLayerSize, scale9 = true, ap = ui.rb})
    rightLayer:add(teamLayerNode)

    local teamTipsTitle = ui.title({img = RES_DICT.ATTACKTEAM_TITLE}):updateLabel({fnt = FONT.D5, text = __('出战顺序'), maxW = teamLayerSize.width - 60})
    teamLayerNode:addList(teamTipsTitle):alignTo(nil, ui.ct, {offsetY = -5})

    local teamTableSize = cc.size(teamLayerSize.width - 22, teamLayerSize.height - teamTipsTitle:getContentSize().height - 10)
    local teamTableView = ui.tableView({size = teamTableSize, csizeH = 120, dir = display.SDIR_V, ap = ui.cb})
    teamLayerNode:addList(teamTableView):alignTo(nil, ui.cb, {offsetY = 5})
    teamTableView:setCellCreateHandler(CreateTeamCell)


    -------------------------------------------------
    -- bottom
    local allCards = {}
    for k,v in pairs(app.gameMgr:GetUserInfo().cards) do
        allCards[#allCards+1] = v
    end
    -- 选卡层
    local selectCardParams = {
        size                 = cc.size(size.width, size.height * 0.45),
        selectedCards        = selectedCards or {},
        maxTeamAmount        = maxTeamCount,
        maxCardsAmount       = cardCount,
        teamChangeSingalName = PRESET_TEAM_CHANGE_SIGNAL_NAME,
        --battleType         = self.battleType,                         -- 战斗的类型
        isOpenRecommendState = false,
        recommendCards       = {},
        limitCardsCareers    = {},
        limitCardsQualities  = {},
        allCards             = allCards,
        isShowTeamIndex      = checkint(maxTeamCount) > 1
    }
    local selectCardLayer = require("common.SelectCardMemberView").new(selectCardParams)
    display.commonUIParams(selectCardLayer, {ap = cc.p(0.5, 0), po = cc.p(size.width * 0.5, 0)})
    view:addChild(selectCardLayer, 10)
    selectCardLayer:SetCurrentTeamIndex(1)

    return {
        view            = view,
        backBtn         = backBtn,
        shadowsLayer    = shadowsLayer,
        cell            = cell,
        selectCardLayer = selectCardLayer,
        rightLayer      = rightLayer,
        teamTableView   = teamTableView,
    }
end

-- 初始化当前队伍
function PresetTeamEditTeamView:RefreshUI(selectIndex, teamData, initTeamIndex)
    local viewData = self:GetViewData()
    local cell = viewData.cell
    cell:RefreshUI(selectIndex, teamData, true, initTeamIndex)
end


---刷新当前队伍的卡
function PresetTeamEditTeamView:RefreshPresetTeamCellCards(teamIndex)
    local viewData = self:GetViewData()
    local selectCardLayer = viewData.selectCardLayer
    local curTeamCards = selectCardLayer:GetTeamDataByTeamIndex(teamIndex)
    viewData.cell:UpdateTeamLayer(curTeamCards, teamIndex, true)
end


function PresetTeamEditTeamView:GetViewData()
    return self.viewData_
end

return PresetTeamEditTeamView