---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zxr.
--- DateTime: 2020/2/26 4:06 下午
---

local Mediator = mvc.Mediator
---@class PresetTeamEditTeamMediator
local PresetTeamEditTeamMediator = class("PresetTeamEditTeamMediator", mvc.Mediator)


------------ import ------------
------------ import ------------

------------ define ------------
local display = display
local NAME = "presetTeam.PresetTeamEditTeamMediator"
local PRESET_TEAM_CHANGE_SIGNAL_NAME = "PRESET_TEAM_CHANGE_SIGNAL_NAME"
local EQUIP_A_CARD = "EQUIP_A_CARD"
local UNEQUIP_A_CARD = "UNEQUIP_A_CARD"
local CLEAR_ALL_CARDS = "CLEAR_ALL_CARDS"

local TEAM_CELL_UPDATE_TYPE = {
    SELECT = 'select',
    MEMBER = 'member',
}


------------ define ------------

--[[
constructor
--]]
function PresetTeamEditTeamMediator:ctor(params, viewComponent)
    Mediator.ctor(self, NAME, viewComponent)

    self:InitData(params or {})
end

---------------------------------------------------
-- mediator extend begin --
---------------------------------------------------
function PresetTeamEditTeamMediator:InterestSignals()
    local signals = {
        ------------ server ------------
        POST.PRESET_TEAM_SET_TEAM_CUSTOM.sglName, --- 设置自定义编队信息

        ------------ local ------------
        EQUIP_A_CARD,
        UNEQUIP_A_CARD,
        CLEAR_ALL_CARDS,
        PRESET_TEAM_CHANGE_SIGNAL_NAME,
    }

    return signals
end

function PresetTeamEditTeamMediator:ProcessSignal(signal)
    local name = signal:GetName()
    local responseData = signal:GetBody()

    if (name == EQUIP_A_CARD or
        name == UNEQUIP_A_CARD or
        name == CLEAR_ALL_CARDS) then
        self:GetViewComponent():RefreshPresetTeamCellCards(self:getSelectTeamIndex())
        self.viewData_.teamTableView:updateCellViewData(responseData.teamIndex, nil, TEAM_CELL_UPDATE_TYPE.MEMBER)
        self.viewData_.teamTableView:updateCellViewData(self:getSelectTeamIndex(), nil, TEAM_CELL_UPDATE_TYPE.MEMBER)


    elseif name == PRESET_TEAM_CHANGE_SIGNAL_NAME then
        local newTeamData = self:GetViewData().selectCardLayer:GetAllTeamData()
        if self:CheckSelectCardCount(newTeamData) then
            app.uiMgr:ShowInformationTips(string.format(__('最少编队%s人'), self.minSelectCardCount))
            return
        end

        if self:CheckTeamNameIsChange() or self:CheckTeamCardIsChange(newTeamData) then
            local cards   = self:FixTeamData(newTeamData)
            local teamId  = self.presetTeamData.teamId or "null"
            local newName = self:GetViewData().cell:GetViewData().teamNameLabel:getString()
            if self.saveCallback_ then
                local tempFunc = function()
                    self.saveCallback_({
                        teamId    = teamId,
                        name      = newName,
                        type      = self.tabType,
                        cellIndex = self.selectIndex,
                        cardCount = self.cardCount,
                        teamCards = cards,
                    })
                    self:GetFacade():UnRegsitMediator(NAME)
                end

                if self.saveTipsArgs_ then
                    self.saveTipsArgs_.callback = tempFunc
                    app.uiMgr:AddNewCommonTipDialog(self.saveTipsArgs_)
                else
                    tempFunc()
                end
                
            else
                self:SendSignal(POST.PRESET_TEAM_SET_TEAM_CUSTOM.cmdName, {
                    teamId    = teamId,
                    name      = newName,
                    cardJson  = json.encode(cards),
                    type      = self.tabType,
                    cellIndex = self.selectIndex,
                    cardCount = self.cardCount,
                })
            end
        else
            self:GetFacade():UnRegsitMediator(NAME)
        end


    elseif name == POST.PRESET_TEAM_SET_TEAM_CUSTOM.sglName then
        self:GetFacade():UnRegsitMediator(NAME)
    end
end

function PresetTeamEditTeamMediator:Initial(key)
    self.super.Initial(self, key)
end

function PresetTeamEditTeamMediator:OnRegist()
    -- 初始化界面
    self:InitView()

    -- 注册信号
    regPost(POST.PRESET_TEAM_SET_TEAM_CUSTOM)
end

function PresetTeamEditTeamMediator:OnUnRegist()

    -- 注销信号
    unregPost(POST.PRESET_TEAM_SET_TEAM_CUSTOM)

    self:ExitMediator()
end
---------------------------------------------------
-- mediator extend end --
---------------------------------------------------

function PresetTeamEditTeamMediator:getSelectTeamIndex()
    return checkint(self.selectTeamIndex_)
end
function PresetTeamEditTeamMediator:setSelectTeamIndex(index)
    local oldSelectTeamIndex = self:getSelectTeamIndex()
    local newSelectTeamIndex = checkint(index)
    self.selectTeamIndex_ = newSelectTeamIndex
    
    if self.viewData_ and self.viewData_.teamTableView then
        self.viewData_.teamTableView:updateCellViewData(oldSelectTeamIndex, nil, TEAM_CELL_UPDATE_TYPE.SELECT)
        self.viewData_.teamTableView:updateCellViewData(newSelectTeamIndex, nil, TEAM_CELL_UPDATE_TYPE.SELECT)
        self.viewData_.selectCardLayer:SetCurrentTeamIndex(self.selectTeamIndex_)
        self:GetViewComponent():RefreshPresetTeamCellCards(self:getSelectTeamIndex())
    end
end

---------------------------------------------------
-- init begin --
---------------------------------------------------
--[[
初始化数据
@params data table 数据
--]]
function PresetTeamEditTeamMediator:InitData(data)
    self.isControllable_ = true
    self.isEnableEditState = false

    -- preset index
    self.selectIndex = data.selectIndex or 1

    local presetTeamData = data.data or {}
    self.presetTeamData = presetTeamData

    local conf = data.conf
    self.presetTeamType = conf.type
    self.cardCount = conf.cardCount
    self.minSelectCardCount = conf.minCardCount or 1
    self.maxTeamCount = conf.maxTeamCount or 1
    self.minTeamCount = 1
    self.saveCallback_ = data.saveCB
    self.saveTipsArgs_ = data.saveTIps
    self.isEditableName_ = data.editName == nil and true or data.editName

    self.tabType = data.tabType

    local cardIds = presetTeamData.cardIds or {}
    local cards = {}
    for teamIndex, cardIdList in pairs(cardIds) do
        cards[teamIndex] = cards[teamIndex] or {}
        for i = 1, self.cardCount do
            local playerCardId = cardIdList[i]
            if playerCardId then
                table.insert(cards[teamIndex], {id = playerCardId})
            else
                table.insert(cards[teamIndex], {})
            end
        end
    end
    self.selectedCards = cards
    local selectTeamCount = data.teamIndex or self.minTeamCount
    self:setSelectTeamIndex(selectTeamCount)
end
--[[
初始化场景
--]]
function PresetTeamEditTeamMediator:InitView()

    ---@type PresetTeamEditTeamView
    local viewComponent = require('Game.views.presetTeam.PresetTeamEditTeamView').new({
        mediatorName = NAME, selectedCards = self.selectedCards,
        presetTeamType = self.presetTeamType, cardCount = self.cardCount,
        maxTeamCount = self.maxTeamCount
    })
    local viewData = viewComponent:GetViewData()
    self.viewData_ = viewData
    self:SetViewComponent(viewComponent)
    self:InitOwnerScene_()
    display.commonUIParams(viewComponent,{po = display.center, ap = display.CENTER})
    self:GetOwnerScene():AddDialog(viewComponent)

    local teamData = self.presetTeamData or {}
    viewComponent:RefreshUI(self.selectIndex, teamData, self:getSelectTeamIndex())

    --- init click event
    local cell = viewData.cell
    local cellViewData = cell:GetViewData()
    display.commonUIParams(cellViewData.teamNameTouchView, {cb = handler(self, self.OnClickChangeBtnAction), animate = false})

    display.commonUIParams(viewData.backBtn, {cb = handler(self, self.OnClickBackBtnAction), animate = false})

    viewData.teamTableView:setCellInitHandler(function(cellViewData)
        ui.bindClick(cellViewData.clickArea, handler(self, self.onClickTeamTableCellHandler_))
    end)
    viewData.teamTableView:setCellUpdateHandler(handler(self, self.onUpdateTeamTableCellHandler_))
    viewData.teamTableView:resetCellCount(self.maxTeamCount)

    cellViewData.teamNamEditBox:registerScriptEditBoxHandler(handler(self, self.OnClickEditBoxEventHandler))
end

function PresetTeamEditTeamMediator:InitOwnerScene_()
    self.ownerScene_ = app.uiMgr:GetCurrentScene()
end
---------------------------------------------------
-- init end --
---------------------------------------------------

---------------------------------------------------
-- view control begin --
---------------------------------------------------
function PresetTeamEditTeamMediator:ExitMediator()
    local viewComponent = self:GetViewComponent()

    self:GetFacade():DispatchObservers("EXIT_PRESET_TEAM_EDIT_TEAM_MEDIATOR")

    if self.ownerScene_ and viewComponent and not tolua.isnull(viewComponent) then
        self.ownerScene_:RemoveDialog(viewComponent)
        self.ownerScene_ = nil
    end
end
---------------------------------------------------
-- view control end --
---------------------------------------------------

---------------------------------------------------
-- check begin --
---------------------------------------------------

---@param teamData table
function PresetTeamEditTeamMediator:CheckSelectCardCount(teamDatas)
    local selectCardCount = 0
    for teamIndex, teamData in ipairs(teamDatas) do
        for i, v in pairs(teamData) do
            if v.id then
                selectCardCount = selectCardCount + 1
            end
        end
    end
    return selectCardCount < self.minSelectCardCount
end


function PresetTeamEditTeamMediator:CheckTeamIsValidChange()
    return checkint(self.presetTeamData.valid) == 1
end
function PresetTeamEditTeamMediator:CheckTeamNameIsChange()
    local newName = self:GetViewData().cell:GetViewData().teamNameLabel:getString()
    local oldName = self.presetTeamData.name or self.presetTeamData.defaultName
    return oldName ~= newName
end
---检查团队是否改变
---@param teamData table
function PresetTeamEditTeamMediator:CheckTeamCardIsChange(teamDatas)
    local cardIds = self.presetTeamData.cardIds or {}

    local checkChanged = function(teamDataList, cardIdList)
        for i, v in ipairs(teamDataList) do
            local oldPlayerCardId = checkint(cardIdList[i])
            local newPlayerCardId = checkint(v.id)
            if checkint(oldPlayerCardId) ~= checkint(newPlayerCardId) then
                return true
            end
        end
    end

    for teamIndex = 1, self.maxTeamCount do
        local cardIdList = cardIds[teamIndex] or {}
        local teamDataList = teamDatas[teamIndex] or {}
        if checkChanged(teamDataList, cardIdList) then
            return true
        end
    end

    return false
end

---修正团队数据
---@param teamData table
function PresetTeamEditTeamMediator:FixTeamData(teamDatas)
    local cards = {}

    local fix = function(teamDataList, teamIndex)
        cards[teamIndex] = cards[teamIndex] or {}
        for i, v in ipairs(teamDataList) do
            local id = checkint(v.id)
            if id > 0 then
                local card = app.gameMgr:GetCardDataById(id)
                ---  修改为指定字段
                table.insert(cards[teamIndex], {
                    id             = card.id,
                    cardId         = card.cardId,
                    playerId       = card.playerId,
                    pets           = card.pets,
                    artifactTalent = card.artifactTalent,
                })
                -- table.insert(cards[teamIndex], card)
            else
                table.insert(cards[teamIndex], {})
            end
        end
    end

    for teamIndex, teamDataList in pairs(teamDatas) do
        fix(teamDataList, teamIndex)
    end

    return cards
end

---------------------------------------------------
-- check end --
---------------------------------------------------

---------------------------------------------------
-- get set begin --
---------------------------------------------------
function PresetTeamEditTeamMediator:GetViewData()
    return self.viewData_
end

function PresetTeamEditTeamMediator:GetOwnerScene()
    return self.ownerScene_
end

---------------------------------------------------
-- get set end --
---------------------------------------------------

---------------------------------------------------
--- click handler begin --
---------------------------------------------------

---点击返回按钮
---@param sender userdata
function PresetTeamEditTeamMediator:OnClickBackBtnAction(sender)
    PlayAudioByClickNormal()
    if not self.isControllable_ then return end
    
    local newTeamData = self:GetViewData().selectCardLayer:GetAllTeamData()
    if self:CheckTeamNameIsChange() or self:CheckTeamCardIsChange(newTeamData) then
        local commonTip = require('common.NewCommonTip').new({
            text = __('返回将无法保存编队 是否继续?'),
            callback = function ()
                self:GetFacade():UnRegsitMediator(NAME)
            end
        })
        commonTip:setPosition(display.center)
        app.uiMgr:GetCurrentScene():AddDialog(commonTip)
    else
        self:GetFacade():UnRegsitMediator(NAME)
    end
end

---点击修改团队信息按钮
---@param sender userdata
function PresetTeamEditTeamMediator:OnClickChangeBtnAction(sender)
    if not self.isEditableName_ then return end
    PlayAudioByClickNormal()
    if not self.isControllable_ then return end

    -- sender:setVisible(false)

    ---@type PresetTeamCell
    local cell = self:GetViewData().cell
    self.isEnableEditState = not self.isEnableEditState
    cell:SwitchTeamNamEditBoxShowState(self.isEnableEditState)
end


function PresetTeamEditTeamMediator:OnClickEditBoxEventHandler(eventType )
    if eventType == 'changed' then return end

    ---@type PresetTeamCell
    local cell = self:GetViewData().cell
    local cellViewData = cell:GetViewData()

    if eventType == 'ended' then  -- 输入结束
        local teamNamEditBox = cell:GetViewData().teamNamEditBox
        local text = teamNamEditBox:getText()
        teamNamEditBox:setPlaceHolder(text)

        cell:UpdateTeamNameLabel(text, self.selectIndex)
        self.isEnableEditState = not self.isEnableEditState
        cell:SwitchTeamNamEditBoxShowState(self.isEnableEditState)
    end
end


function PresetTeamEditTeamMediator:OnClickShadowsAction(sender)
    self:GetFacade():UnRegsitMediator(NAME)
end


function PresetTeamEditTeamMediator:onUpdateTeamTableCellHandler_(cellIndex, cellViewData, updateType)
    if cellViewData == nil then return end

    local selectCardLayer = self:GetViewData().selectCardLayer
    local selectTeamDatas = selectCardLayer:GetTeamDataByTeamIndex(cellIndex) or {}

    local editdCardCount = 0
    local leaderCardUuid = nil
    local totalCardCount = #selectTeamDatas
    for cardIndex, cardData in ipairs(selectTeamDatas) do
        local cardUuid = checkint(cardData.id)
        if cardUuid > 0 then
            editdCardCount = editdCardCount + 1
            if leaderCardUuid == nil then
                leaderCardUuid = cardUuid
            end
        end
    end

    -- update all info
    if updateType == nil then
        
        -- update cell tag
        cellViewData.view:setTag(cellIndex)
        cellViewData.clickArea:setTag(cellIndex)

        -- update cell indexLabel
        cellViewData.indexLabel:updateLabel({text = tostring(cellIndex) .. '.'})
    end

    -- update : memberLabel / leaderHead
    if updateType == nil or updateType == TEAM_CELL_UPDATE_TYPE.MEMBER then
        cellViewData.memberLabel:updateLabel({text = string.fmt('%1/%2', editdCardCount, totalCardCount)})
        cellViewData.headNode:setVisible(editdCardCount > 0 and leaderCardUuid ~= nil)
        if leaderCardUuid then
            local leaderCardData = app.gameMgr:GetCardDataById(leaderCardUuid)
            if checkint(cellViewData.headNode.cardId) ~= checkint(leaderCardData.cardId) then
                cellViewData.headNode:RefreshUI({cardData = {cardId = leaderCardData.cardId}})
            end
        end
    end

    -- udpate : select status
    if updateType == nil or updateType == TEAM_CELL_UPDATE_TYPE.SELECT then
        cellViewData.selectImg:setVisible(self:getSelectTeamIndex() == cellIndex)
    end
end


function PresetTeamEditTeamMediator:onClickTeamTableCellHandler_(sender)
    PlayAudioByClickNormal()
    if not self.isControllable_ then return end

    local teamIndex = checkint(sender:getTag())
    if self:getSelectTeamIndex() ~= teamIndex then
        self:setSelectTeamIndex(teamIndex)
    end
end


---------------------------------------------------
--- click handler end --
---------------------------------------------------

return PresetTeamEditTeamMediator