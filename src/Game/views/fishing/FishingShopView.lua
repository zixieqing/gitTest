---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2018/8/9 11:26 AM
---

--[[
钓场商店View
--]]
---@class FishingShopView
local FishingShopView = class('FishingShopView', function ()
    local node = CLayout:create(display.size)
    node.name = 'Game.views.FishingShopView'
    node:enableNodeEvents()
    return node
end)
local GoodPurchaseNode = require('common.GoodPurchaseNode')
local RES_DICT = {
    SELECT_BTN      = _res("ui/common/common_btn_tab_select.png"),
    NORMAL_BTN      = _res("ui/common/common_btn_tab_default.png"),
    BG_WHITE        = _res('ui/home/union/guild_shop_bg_white.png'),
    SHOP_BG         = _res('ui/home/union/guild_shop_bg.png'),
    SHOP_TITLE      = _res('ui/home/union/guild_shop_title.png'),
    BG_GOODS        = _res('ui/common/common_bg_goods.png'),
    BG_RESEARCH     = _res('ui/home/market/market_main_bg_research.png'),
    DELETE_RESEARCH = _res('ui/home/market/market_main_btn_research_delete.png'),
    IMG_CURRENCY    =  _res('ui/home/nmain/main_bg_money'),
    ICON_RESEARCH   = _res('ui/home/market/market_main_ico_research.png')
}
local function CreateView( )

    local bg = display.newImageView(RES_DICT.BG_WHITE, 0, 0)
    local bgSize = bg:getContentSize()
    local view = CLayout:create(bgSize)
    bg:setPosition(bgSize.width/2, bgSize.height/2 - 5)
    view:addChild(bg, 2)
    local bgFrame = display.newImageView(RES_DICT.SHOP_BG, bgSize.width/2,  bgSize.height/2)
    view:addChild(bgFrame, 1)
    local mask = display.newLayer(bgSize.width/2, bgSize.height/2, {ap = display.CENTER, size = bgSize, enable = true, color = cc.c4b(0,0,0,0)})
    view:addChild(mask, -1)

    local titleBg = display.newButton(bgSize.width/2, bgSize.height + 13, {n = RES_DICT.SHOP_TITLE, enable = false})
    view:addChild(titleBg, 10)
    display.commonLabelParams(titleBg, fontWithColor(18, {text = __('钓场商店'), font = TTF_GAME_FONT, ttf = true}))
    local timeLabel = display.newLabel(18, bgSize.height - 45, fontWithColor(16, {text = '', ap = cc.p(0, 0.5)}))
    view:addChild(timeLabel, 10)
    -- listView
    local listSize = cc.size(bgSize.width - 24, 510)
    local listCellSize = cc.size((listSize.width - 8)/5, listSize.height*0.55)
    local listBg = display.newImageView(RES_DICT.BG_GOODS, bgSize.width/2, 6, {ap = cc.p(0.5, 0), scale9 = true, size = listSize, capInsets = cc.rect(10, 10, 487, 113)})
    view:addChild(listBg, 3)
    local gridView = CGridView:create(cc.size(listSize.width - 8, listSize.height))
    gridView:setSizeOfCell(listCellSize)
    gridView:setColumns(5)
    view:addChild(gridView, 10)
    gridView:setAnchorPoint(cc.p(0.5, 0))
    gridView:setPosition(cc.p(bgSize.width/2, listBg:getPositionY()))

    local myNodes = {}
    local fishTable = {
        { name = CommonUtils.GetConfig('goods', 'goods', WATER_CRYSTALLIZATION_ID).name, goodsId = WATER_CRYSTALLIZATION_ID },
        { name = CommonUtils.GetConfig('goods', 'goods', WIND_CRYSTALLIZATION_ID).name, goodsId = WIND_CRYSTALLIZATION_ID },
        { name = CommonUtils.GetConfig('goods', 'goods', RAY_CRYSTALLIZATION_ID).name, goodsId = RAY_CRYSTALLIZATION_ID },
        { name = __('钓饵'), goodsId = FISH_POPULARITY_ID },
    }
    local toggleSize = cc.size(155 , 50 )
    local myNodeLayout = display.newLayer(15,515 ,
    {ap = display.LEFT_BOTTOM , size = cc.size(toggleSize.width * #fishTable , toggleSize.height )})
    view:addChild(myNodeLayout, 10)

    for i, v in pairs(fishTable) do
        local toggleView =  display.newToggleView(toggleSize.width *(i - 0.5 ) , toggleSize.height /2 , {n = RES_DICT.NORMAL_BTN , d= RES_DICT.SELECT_BTN , s =  RES_DICT.SELECT_BTN  })
        myNodeLayout:addChild(toggleView)
        local toggleViewSize = toggleView:getContentSize()
        local fishGoldName = display.newLabel(toggleViewSize.width /2 , toggleViewSize.height /2 ,
        fontWithColor(10,{color = "#dbc5b8" , text = v.name , reqW = 140 }) )
        toggleView:addChild(fishGoldName)
        fishGoldName:setName("fishGoldName")
        myNodes[#myNodes+1] = toggleView
    end
    local researchSize = cc.size(304, 40)
    local researchLayout = display.newLayer(1080,530,{ap = display.RIGHT_BOTTOM , size= researchSize })
    view:addChild(researchLayout,10)

    local researchImage  = display.newImageView(RES_DICT.BG_RESEARCH , researchSize.width /2 , researchSize.height/2)
    researchLayout:addChild(researchImage)

    local researchIcon = display.newImageView(RES_DICT.ICON_RESEARCH ,0 , researchSize.height/2 ,{ap = display.LEFT_CENTER ,enable = true } )
    researchLayout:addChild(researchIcon)

    local researchDelete = display.newImageView(RES_DICT.DELETE_RESEARCH ,researchSize.width  , researchSize.height/2 ,{ap = display.RIGHT_CENTER , enable = true  } )
    researchLayout:addChild(researchDelete)


    local editorText = ccui.EditBox:create(cc.size(204, 40), 'empty')
    editorText:setPosition(researchSize.width/2 , researchSize.height/2)
    editorText:setFontSize(fontWithColor('M2PX').fontSize)
    editorText:setFontColor(ccc3FromInt('#9f9f9f'))
    editorText:setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE)
    editorText:setPlaceHolder(__('输入关键字'))
    editorText:setPlaceholderFontSize(22)
    editorText:setPlaceholderFontColor(ccc3FromInt('#9c9c9c'))
    editorText:setVisible(true)
    editorText:setMaxLength(40)
    editorText:setReturnType(cc.KEYBOARD_RETURNTYPE_DONE)
    researchLayout:addChild(editorText)
    return {
        view           = view,
        bgSize         = bgSize,
        listSize       = listSize,
        listCellSize   = listCellSize,
        gridView       = gridView,
        timeLabel      = timeLabel,
        myNodes        = myNodes,
        fishTable      = fishTable ,
        editorText     = editorText,
        researchIcon   = researchIcon,
        researchDelete = researchDelete,
    }
end
function FishingShopView:CreateTopView()
    local iconData = {WATER_CRYSTALLIZATION_ID,WIND_CRYSTALLIZATION_ID, RAY_CRYSTALLIZATION_ID, DIAMOND_ID , GOLD_ID}
    local cellSize = cc.size(190,40)
    local len = #iconData
    local  topSize = cc.size(cellSize.width * len + 20 ,cellSize.height)
    local topLayout = display.newLayer( display.SAFE_R,display.height, { ap = display.RIGHT_TOP , size =  topSize})
    local imageImage = display.newImageView(_res('ui/home/nmain/main_bg_money.png'),topSize.width/2+15,topSize.height/2,{enable = false,
                                                                                                                      scale9 = true, size = cc.size(topSize.width + 90, 62)})
    topLayout:addChild(imageImage)

    local purchaseNodes = {}
    for k ,v  in pairs(iconData) do
        local isShowHpTips = (v == HP_ID) and 1 or -1
        local purchaseNode = GoodPurchaseNode.new({id = v, isShowHpTips = isShowHpTips})
        purchaseNode:updataUi(checkint(v))
        purchaseNode:setPosition(cc.p(cellSize.width * (k -0.5) , cellSize.height/2 ))
        topLayout:addChild(purchaseNode,10)
        purchaseNode.viewData.touchBg:setTag(checkint(v))
        purchaseNodes[tostring(v)] = purchaseNode
    end
    return {
        topLayout = topLayout ,
        purchaseNodes = purchaseNodes
    }
end
function FishingShopView:ctor( ... )
    local eaterLayer = CColorView:create(cc.c4b(0, 0, 0, 255 * 0.6))
    eaterLayer:setTouchEnabled(true)
    eaterLayer:setContentSize(display.size)
    eaterLayer:setPosition(utils.getLocalCenter(self))
    self.eaterLayer = eaterLayer
    self:addChild(eaterLayer, -1)
    self.viewData_ = CreateView()
    self:addChild(self.viewData_.view, 1)
    local topData = self:CreateTopView()
    self.viewData_.purchaseNodes = topData.purchaseNodes
    self:addChild(topData.topLayout)
    self.viewData_.view:setPosition(cc.p(display.cx, display.cy - 25))
end
function FishingShopView:UpdateCountUI()
    if self.viewData_ and  self.viewData_.purchaseNodes then
        for k ,v in pairs(self.viewData_.purchaseNodes or {})do
            v:updataUi(checkint(k))
        end
    end
end
return FishingShopView
