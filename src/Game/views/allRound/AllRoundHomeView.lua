    ---
    --- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2018/10/12 3:27 PM
---
---@type GameScene
local GameScene = require( 'Frame.GameScene' )
---@class AllRoundHomeView :GameScene
local AllRoundHomeView = class('AllRoundHomeView' , GameScene)
local newImageView = display.newImageView
local newLabel = display.newLabel
local newNSprite = display.newNSprite
local newButton = display.newButton
local newLayer = display.newLayer
local RES_DICT = {
    COMMON_ICO_TEXT_M       = _res('ui/common/common_ico_text_m.png'),
    ALLROUND_BTN_PATH_NAME  = _res('ui/home/allround/allround_btn_path_name.png'),
    ALLROUND_ICO_BOOK_1     = _res('ui/home/allround/allround_ico_book_1.png'),
    ALLROUND_ICO_BOOK_2     = _res('ui/home/allround/allround_ico_book_2.png'),
    ALLROUND_ICO_BOOK_3     = _res('ui/home/allround/allround_ico_book_3.png'),
    ALLROUND_ICO_BOOK_4     = _res('ui/home/allround/allround_ico_book_4.png'),
    ALLROUND_BG_FRAME_FINAL = _res('ui/home/allround/allround_bg_frame_final.png'),
    ALLROUND_LABEL_SUBTITLE = _res('ui/home/allround/allround_label_subtitle.png'),
    ALLROUND_BG_CIRCLE      = _res('ui/home/allround/allround_bg_circle.png'),
    COMMON_REWARD_LIGHT     = _res('ui/common/common_reward_light.png'),
    CARD_WEAPON_BASE_S_BG   = _res('ui/artifact/card_weapon_base_s_bg.png'),
    GOODS_ICON_195057       = _res('arts/goods/goods_icon_195057.png'),
    ALLROUND_BG_FRAME_BOX   = _res('ui/home/allround/allround_bg_frame_box.png'),
    COMMON_BTN_BACK         = _res('ui/common/common_btn_back.png'),
    CARD_WEAPON_LABEL_NAME  = _res('ui/artifact/card_weapon_label_name.png'),
    ALLROUND_BG_BAR_ACTIVE  = _res('ui/home/allround/allround_bg_bar_active.png'),
    CARD_SKILL_BTN_SWITCH   = _res('ui/home/cardslistNew/card_skill_btn_switch.png'),
    ALLROUND_BG_BAR_GREY    = _res('ui/home/allround/allround_bg_bar_grey.png'),
    COMMON_TITLE_NEW        = _res('ui/common/common_title_new.png'),
    COMMON_BTN_TIPS         = _res('ui/common/common_btn_tips.png'),
    CARD_WEAPON_BG          = _res('ui/artifact/card_weapon_bg.jpg'),
    RAID_ROOM_ICO_READY     = _res('ui/common/raid_room_ico_ready.png'),
    CARD_WEAPON_BG_CIRCLE_2 = _res('ui/artifact/card_weapon_bg_circle_2'),
    CARD_WEAPON_BG_CIRCLE_1 = _res('ui/artifact/card_weapon_bg_circle_1'),
}
function AllRoundHomeView:ctor(param )
    local param = param or {}
    self.callback = param.callback
    local view = newLayer(display.cx, display.cy,{ap = display.CENTER, size = display.size})
    self:addChild(view,2)
    view:setPosition(display.center)
    local swallowLayer = newLayer(display.cx, display.cy,{ap = display.CENTER, size = display.size , color = cc.c4b(0,0,0,0) , enable = true })
    self:addChild(swallowLayer)
    swallowLayer:setPosition(display.center)
    -- 背景图片
    local bg = display.newImageView(RES_DICT.CARD_WEAPON_BG)
    local bgSize = cc.size(1624,1006)
    bg:setPosition(bgSize.width/2 , bgSize.height/2)
    local bgLayout = display.newLayer(display.cx  , display.cy , {ap = display.CENTER , color1 = cc.r4b() , size = bgSize})
    view:addChild(bgLayout)
    bgLayout:addChild(bg)

    -- 外部的大圆圈
    local circleOneImage = display.newImageView(RES_DICT.CARD_WEAPON_BG_CIRCLE_1)
    circleOneImage:setScale(2)
    local circleOneImageSize = circleOneImage:getContentSize()
    circleOneImageSize = cc.size(circleOneImageSize.width * 2 , circleOneImageSize.height*2)
    circleOneImage:setPosition(circleOneImageSize.width/2 , circleOneImageSize.height/2)
    local circleLayout = display.newLayer(866  , bgSize.height/2 + 20 , {size = circleOneImageSize , color1 = cc.r4b(), ap = display.CENTER})
    circleLayout:addChild(circleOneImage)
    bgLayout:addChild(circleLayout,20)

    -- 里面的小圆圈
    local circleTwoImage = display.newImageView(RES_DICT.CARD_WEAPON_BG_CIRCLE_2,circleOneImageSize.width/2 ,circleOneImageSize.height/2)
    circleTwoImage:setScale(2)
    circleLayout:addChild(circleTwoImage)
    circleOneImage:runAction(
            cc.RepeatForever:create(
                    cc.Spawn:create(
                            cc.TargetedAction:create( circleTwoImage, cc.RotateBy:create(10,-180)),
                            cc.RotateBy:create(10,180)
                    )

            )
    )
    ------------------------- 中间的centerLayout-----------------------------------------------------------
    local centerLayout = newLayer(  display.cx + 710 - 675,  display.cy + 435 - 375,
                                    { ap = display.CENTER, size = cc.size(437, 447) })
    view:addChild(centerLayout)
    centerLayout:setVisible(false)

    local cardPreviewEntranceNode = require('common.CardPreviewEntranceNode').new()
    centerLayout:addChild(cardPreviewEntranceNode , 10 )
    cardPreviewEntranceNode:setPosition(437 - 70 , 120)
    local avatorLayout = newLayer(211, 246,
                                  { ap = display.CENTER, color1 = cc.r4b(0), size = cc.size(420, 400), enable = true })
    centerLayout:addChild(avatorLayout)

    local avatorFrameImage = newImageView(RES_DICT.ALLROUND_BG_FRAME_FINAL, 209, 194,
                                          { ap = display.CENTER, tag = 872, enable = true })
    avatorLayout:addChild(avatorFrameImage,2)
    local rewardLabel = display.newButton(210, 63, { n = RES_DICT.ALLROUND_LABEL_SUBTITLE })
    display.commonLabelParams(rewardLabel ,  fontWithColor('14', { ap = display.CENTER, outline = '#5e0e0e', ttf = true, font = TTF_GAME_FONT, color = '#fbdd95', fontSize = 24, text = __('点击领取'), tag = 873 }) )
    rewardLabel:setPosition(210, 73)
    avatorLayout:addChild(rewardLabel,1)

    local weaponBass = newImageView(RES_DICT.CARD_WEAPON_BASE_S_BG, 211, 97,
                                    { ap = display.CENTER, tag = 867, enable = false })
    centerLayout:addChild(weaponBass)
    weaponBass:setScaleX(0.8)
    weaponBass:setScaleY(0.61)
    local cardBgImage = newNSprite(RES_DICT.CARD_WEAPON_LABEL_NAME, 204, 31,
                                   { ap = display.CENTER, tag = 868 })
    cardBgImage:setScale(0.8, 0.8)
    centerLayout:addChild(cardBgImage)

    local cardName = newLabel(214, 32,
                              fontWithColor('14', { ap = display.CENTER, outline = '#5e0e0e', ttf = true, font = TTF_GAME_FONT, color = '#ffffff', fontSize = 24, text = "", tag = 869 }))
    centerLayout:addChild(cardName)

    local descrLabel = newLabel(210, 66,
                                { text = __('完成所有任务奖励飨灵：'), ap = display.CENTER, color = '#fbdd95',  fontSize = 20, tag = 870 })
    centerLayout:addChild(descrLabel)

    local qualityImage = newNSprite(RES_DICT.COMMON_ICO_TEXT_M, 50, 72,
                                    { ap = display.LEFT_TOP, tag = 874 })
    qualityImage:setScale(0.5, 0.5)
    centerLayout:addChild(qualityImage)

    local backBtn = newButton( 56, 695,
                               { n = RES_DICT.COMMON_BTN_BACK ,  ap = display.CENTER, tag = 928 , cb = function()
                                   self:removeFromParent()
                               end })
    backBtn:setScale(1, 1)
    backBtn:setPosition(display.SAFE_L + 56, display.height + -55)
    view:addChild(backBtn ,2 )

    local moduleTable = {
        {tag = 1, name = __('日常路线') , image = RES_DICT.ALLROUND_ICO_BOOK_4 ,pos = cc.p(display.cx + 407, display.cy + -148)},
        {tag = 2, name = __('战斗路线') , image = RES_DICT.ALLROUND_ICO_BOOK_3 ,pos = cc.p(display.cx + 452, display.cy + 228)},
        {tag = 3, name = __('经营路线') , image = RES_DICT.ALLROUND_ICO_BOOK_1 ,pos = cc.p(display.cx + -412, display.cy + 120)},
        {tag = 4, name = __('堕神路线') , image = RES_DICT.ALLROUND_ICO_BOOK_2 ,pos = cc.p(display.cx + -331, display.cy + -198)}
    }
    local  moduleBtns = {}
    for i = 1, #moduleTable do
        local moduleData = moduleTable[i]
        local cellLayout = self:CreateCell()
        local viewData = cellLayout.viewData
        viewData.moduleIcon:setTexture(moduleData.image)
        display.commonLabelParams(viewData.moduleName , {text = moduleTable[i].name ,w = 140 , hAlign = display.TAC})
        viewData.touchNode:setTag(moduleData.tag)
        moduleBtns[#moduleBtns+1] = cellLayout
        cellLayout:setPosition(moduleData.pos)
        view:addChild(cellLayout , 2)
    end


    local tabNameLabel = display.newButton(display.SAFE_L + 130, display.height,{n =RES_DICT.COMMON_TITLE_NEW,enable = true ,ap = cc.p(0, 1)})
    display.commonLabelParams(tabNameLabel, {ttf = true, font = TTF_GAME_FONT, text = __('全能王'), fontSize = 30, color = '473227',offset = cc.p(0,-8)})
    view:addChild(tabNameLabel, 10)
    --tabNameLabel:setTag(BUTTON_TAG.TIPS_BUTTON)
    local tipsBtn = display.newButton(tabNameLabel:getContentSize().width - 50, tabNameLabel:getContentSize().height/2 - 10, {n = RES_DICT.COMMON_BTN_TIPS})
    tabNameLabel:addChild(tipsBtn, 10)

    self.viewData = {
        moduleBtns   = moduleBtns,
        backBtn      = backBtn,
        tabNameLabel = tabNameLabel,
        centerLayout = centerLayout ,
        avatorLayout = avatorLayout ,
        cardPreviewEntranceNode = cardPreviewEntranceNode ,
        avatorFrameImage = avatorFrameImage ,
        rewardLabel = rewardLabel ,
        cardName = cardName ,
        qualityImage = qualityImage
    }

end

function AllRoundHomeView:CreateCell()
    local cellSize = cc.size(366 ,231 )
    local cellLayout = newLayer(0,0,
                                { ap = display.CENTER, size = cc.size(366, 231) })
    cellLayout:setVisible(false)
    local circleImage = newImageView(RES_DICT.ALLROUND_BG_CIRCLE, 186, 129,
                                     { ap = display.CENTER, tag = 108, enable = false })
    cellLayout:addChild(circleImage)

    local lightImage = newImageView(RES_DICT.COMMON_REWARD_LIGHT, 310, 52,
                                    { ap = display.CENTER, tag = 115, enable = false })
    cellLayout:addChild(lightImage)
    lightImage:setScale(0.8)
    lightImage:setVisible(false)
    local buttonImage = newImageView(RES_DICT.ALLROUND_BTN_PATH_NAME, 186, 33,
                                     { ap = display.CENTER, tag = 104, enable = false })
    cellLayout:addChild(buttonImage)

    local moduleMarkImage = newImageView(RES_DICT.ALLROUND_LABEL_SUBTITLE, 176, 61,
                                         { ap = display.CENTER, tag = 109, enable = false })
    cellLayout:addChild(moduleMarkImage,2)

    local moduleName = newLabel(81, 14,
                                fontWithColor(14, { ap = display.CENTER_BOTTOM, color = '#ffffff', text = "", fontSize = 24, outline ="#5e0e0e", outlineSize = 2,  tag = 110 }))
    moduleMarkImage:addChild(moduleName)

    local prograsssBgImage = newImageView(RES_DICT.ALLROUND_BG_BAR_GREY, 92, 46, { ap = display.CENTER, tag = 671, enable = false })
    prograsssBgImage:setPosition(cellSize.width/2-15 , 30)
    cellLayout:addChild(prograsssBgImage)

    local prograss = CProgressBar:create(RES_DICT.ALLROUND_BG_BAR_ACTIVE)
    prograss:setAnchorPoint(cc.p(0.5, 0.5))
    prograss:setMaxValue(100)
    prograss:setValue(20)
    prograss:setScale(1, 1)
    prograss:setPosition(cellSize.width/2 -15, 30)
    prograss:setDirection(eProgressBarDirectionLeftToRight)
    cellLayout:addChild(prograss)

    local prograssLabel = newLabel(cellSize.width/2 -15,30,
                                   { ap = display.CENTER, color = '#ffffff', text = "", fontSize = 20, tag = 107 })
    cellLayout:addChild(prograssLabel)

    local moduleIcon = newImageView(RES_DICT.ALLROUND_ICO_BOOK_1, 192, 165,
                                    { ap = cc.p(0.547600 ,0.680100) , tag = 102, enable = false })
    cellLayout:addChild(moduleIcon)
    --moduleIcon:setScale(1.6)

    local taskFullImage = newNSprite(RES_DICT.RAID_ROOM_ICO_READY, 222, 104,
                                     { ap = display.CENTER, tag = 111 })
    taskFullImage:setScale(1, 1)
    cellLayout:addChild(taskFullImage)

    local touchNode = newLayer(0, 0,
                               { ap = display.LEFT_BOTTOM, color = cc.c4b(0,0,0,0), size = cc.size(366, 231), enable = true })
    cellLayout:addChild(touchNode)

    local boxImage = newImageView(self:GetRoutIdImageByRouteId(1), 310, 52,
                                { ap = display.CENTER, tag = 119 ,enable = true })
    cellLayout:addChild(boxImage,2)

    local rewardImage = newImageView(RES_DICT.ALLROUND_LABEL_SUBTITLE, 310, 10,
                                     { ap = display.CENTER, tag = 116, enable = false })
    cellLayout:addChild(rewardImage,3)
    rewardImage:setVisible(false)
    local rewardLabel = newLabel(81, 28,
                                 fontWithColor('14', { ap = display.CENTER, outline = '#5e0e0e', ttf = true, font = TTF_GAME_FONT, color = '#fbdd95', fontSize = 20, outlineSize = 2,  text ="", tag = 873 }))
    rewardImage:addChild(rewardLabel)
    local redImage = display.newImageView(_res('ui/common/common_hint_circle_red_ico.png') ,cellSize.width /2, cellSize.height /2 )
    cellLayout:addChild(redImage ,100)
    cellLayout.viewData =  {
        cellLayout      = cellLayout,
        circleImage     = circleImage,
        lightImage      = lightImage,
        buttonImage     = buttonImage,
        moduleMarkImage = moduleMarkImage,
        moduleName      = moduleName,
        prograss        = prograss,
        prograssLabel   = prograssLabel,
        moduleIcon      = moduleIcon,
        taskFullImage   = taskFullImage,
        touchNode       = touchNode,
        boxImage        = boxImage,
        rewardImage     = rewardImage,
        rewardLabel     = rewardLabel,
        redImage     = redImage,
    }
    return cellLayout
end
-- 更新
function AllRoundHomeView:UpdateCellLayout(moduleBtn , routeData , isRed)
    local hasDrawn = checkint(routeData.hasDrawn)
    if hasDrawn == 1 then
        self:UpdateComplete(2,routeData ,  moduleBtn )
    else
        local tasks = routeData.tasks
        local status = 1
        for i, v in ipairs(tasks) do
            if checkint(v.hasDrawn) == 0   then
                status = 0
                break
            end
        end
        if status == 1 then
            self:UpdateComplete(1 ,routeData ,  moduleBtn )
        else
            self:UpdateNotComplete(0 , routeData , moduleBtn , isRed)
        end
    end
end

--==============================--
---@Description: 更新完成模块的状态
---@param status number 状态的标识 
---@param data table module 的数据 
---@param node userdata
---@author : xingweihao
---@date : 2018/11/27 5:36 PM
--==============================--

function AllRoundHomeView:UpdateComplete(status , data  ,  node )
    local viewData  = node.viewData
    local rewardLabel = viewData.rewardLabel
    local boxImage = viewData.boxImage
    local lightImage = viewData.lightImage
    local circleImage =viewData.circleImage
    local taskFullImage = viewData.taskFullImage
    local rewardImage = viewData.rewardImage
    local touchNode = viewData.touchNode
    local moduleIcon = viewData.moduleIcon
    local redImage = viewData.redImage
    lightImage:setVisible(false)
    circleImage:setVisible(false)
    rewardImage:setVisible(true)
    taskFullImage:setVisible(true)
    redImage:setVisible(false)
    lightImage:setVisible(false)
    rewardLabel:setVisible(true)
    local taskCount = table.nums(data.tasks)
    local goodsPath = self:GetRoutIdImageByRouteId(checkint(data.routeId))
    boxImage:setTexture(goodsPath)
    local prograss = viewData.prograss
    local prograssLabel = viewData.prograssLabel
    prograss:setMaxValue(taskCount)
    prograss:setValue(taskCount)
    display.commonUIParams(viewData.moduleBtn , {cb = self.callback })
    display.commonLabelParams(prograssLabel ,{text = string.format('%d/%d' , taskCount  , taskCount)})
    touchNode:setTag(checkint(data.routeId .. 1))
    display.commonUIParams(boxImage, {cb = self.callback })
    display.commonUIParams(viewData.touchNode, {cb = self.callback})

    local cellSize = node:getContentSize()
    boxImage:setPosition(cellSize.width/2 , cellSize.height/2 +  35 )
    lightImage:setPosition(cellSize.width/2 , cellSize.height/2 +  35 )
    rewardImage:setPosition(cellSize.width/2 , cellSize.height/2 -15 )
    moduleIcon:setPosition(cellSize.width -50 , cellSize.height/2 -60 )
    taskFullImage:setPosition(cellSize.width -30  , cellSize.height/2 -95 )
    touchNode:setContentSize(cc.size(cellSize.width , cellSize.height/2 -30  ))
    taskFullImage:setScale(0.6)
    moduleIcon:setScale(0.6)
    if status == 1  then
        boxImage:setScale(1)
        lightImage:setVisible(true)
        display.commonLabelParams(rewardLabel , {text = __('点击领取')})
        boxImage:setTag(checkint(data.routeId .. 3))
    elseif status == 2 then
        boxImage:setColor(cc.c3b(80,80,80))
        lightImage:setVisible(false)
        display.commonLabelParams(rewardLabel , {text = __('已领取')})
        boxImage:setTag(checkint(data.routeId .. 2))
    end
    lightImage:runAction(
            cc.RepeatForever:create(
                    cc.RotateBy:create(10,180)
            )
    )
    node:setVisible(true)
end
--==============================--
---@Description: 更新未完成
---@param status number 状态的标识 
---@param data table module 的数据 
---@param node userdata
---@author : xingweihao
---@date : 2018/11/27 5:36 PM
--==============================--
function AllRoundHomeView:UpdateNotComplete(status , data  ,  node , isRed)

    local taskCount =  #data.tasks
    local alreadyHasDrawnNum  = 0
    for i, v in ipairs(data.tasks) do
        if checkint(v.hasDrawn) == 1 then
            alreadyHasDrawnNum = alreadyHasDrawnNum + 1
        end
    end
    local viewData = node.viewData
    local prograss = viewData.prograss
    local prograssLabel = viewData.prograssLabel
    local lightImage = viewData.lightImage
    local circleImage =viewData.circleImage
    local taskFullImage = viewData.taskFullImage
    local rewardImage = viewData.rewardImage
    lightImage:setVisible(false)
    circleImage:setVisible(true)
    rewardImage:setVisible(false)
    taskFullImage:setVisible(false)
    prograss:setMaxValue(taskCount)
    prograss:setValue(alreadyHasDrawnNum)
    display.commonLabelParams(prograssLabel ,{text = string.format('%d/%d' , alreadyHasDrawnNum  , taskCount)})
    local goodsPath = self:GetRoutIdImageByRouteId( checkint(data.routeId))
    viewData.boxImage:setTexture(goodsPath)
    viewData.boxImage:setTag( checkint(data.routeId .. 2)   )
    viewData.touchNode:setTag( checkint(data.routeId .. 1)   )
    viewData.redImage:setVisible(isRed)
    display.commonUIParams(viewData.boxImage , {cb = self.callback  })
    display.commonUIParams(viewData.touchNode , {cb = self.callback })
    circleImage:runAction(
            cc.RepeatForever:create(
                cc.RotateBy:create(10,180)
            )
    )
    node:setVisible(true)
end
function AllRoundHomeView:GetRoutIdImageByRouteId(routeId)
    local imagePath = nil
    if routeId == 1 then
        imagePath =190100
    elseif routeId == 2 then
        imagePath = 190003
    elseif routeId == 3 then
        imagePath = 190101
    elseif routeId == 4 then
        imagePath = 191003
    end
    imagePath = _res(string.format('arts/goods/goods_icon_%s' ,imagePath))
    return imagePath
end
---==============================--
---@Description: 更新avatarLayout
---@param status number 0 、不可领取 1、可以领取 2、已经领取
---@author : xingweihao
---@date : 2018/11/29 8:22 PM
--==============================--
function AllRoundHomeView:UpdateAvatarLayout(status)
    local viewData = self.viewData
    viewData.centerLayout:setVisible(true)
    local avatarSpine = viewData.avatorLayout:getChildByName("avatarSpine")
    local rewardConfig = CommonUtils.GetConfigAllMess('reward','cardCall')
    local rewardData = rewardConfig[tostring(5)].rewards
    if not  avatarSpine then
        local  skinId = CardUtils.GetCardSkinId(rewardData[1].goodsId)
        local avatarSpine = AssetsUtils.GetCardSpineNode({skinId = skinId, scale = 0.5})
        local avatorLayout = viewData.avatorLayout
        viewData.cardPreviewEntranceNode:RefreshUI({ skinId  =  skinId })
        --local avatorLayoutSize = avatorLayout:getContentSize()
        avatorLayout:addChild(avatarSpine)
        avatarSpine:setName("avatarSpine")
        --avatarSpine:setAnchorPoint(display.CENTER)
        avatarSpine:setPosition(220,50)
        avatarSpine:setScaleX(-1.2)
        avatarSpine:setScaleY(1.2)
        avatarSpine:setAnimation(0, 'idle' , true )
    end

    local cardData = CommonUtils.GetConfigAllMess('card','cards')[tostring(rewardData[1].goodsId)]
    local cardName = viewData.cardName
    local qualityImage = viewData.qualityImage
    local rewardLabel = viewData.rewardLabel
    display.commonLabelParams(cardName , {text = cardData.name})
    local quality = cardData.qualityId
    --local qualityTable = {
    --    ['1'] = "m" ,
    --    ['2'] = "r" ,
    --    ['3'] = "sr" ,
    --    ['4'] = "ur" ,
    --    ['5'] = "sp" ,
    --}
    local avatorFrameImage = viewData.avatorFrameImage
    display.commonUIParams(avatorFrameImage , {cb = self.callback})
    local  qualityPath = CardUtils.QUALITY_TEXT_PATH_MAP[tostring(quality)]
    qualityImage:setTexture(qualityPath)
    rewardLabel:setVisible(false)
    if status == 0 then
        rewardLabel:setVisible(false)
        avatorFrameImage:setTag(51)
    elseif status == 1 then
        rewardLabel:setVisible(true)
        avatorFrameImage:setTag(53)
        avatorFrameImage:setLocalZOrder(-1)
        avatorFrameImage:setTexture(RES_DICT.COMMON_REWARD_LIGHT)
        avatorFrameImage:runAction(
                cc.RepeatForever:create(
                        cc.RotateBy:create(10,180)
                )
        )
    elseif status == 2 then
        avatorFrameImage:setTag(50)
        rewardLabel:setVisible(false)
    end

end
return AllRoundHomeView
