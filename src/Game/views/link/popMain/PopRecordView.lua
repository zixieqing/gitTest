---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2020/6/10 2:28 PM
---
local PopRecordView = class('PopRecordView', function ()
	local node = CLayout:create(display.size)
	node.name = 'Game.views.activityMap.PopRecordView'
	node:enableNodeEvents()
	return node
end)
local RES_DICT={
	COMMON_BG_4                              = _res("ui/common/common_bg_4.png"),
	COMMON_TITLE_3                           = _res("ui/common/common_title_3.png"),
	COMMON_BTN_ORANGE                        = _res("ui/home/activity/common_btn_orange.png"),
	COMMON_BG_GOODS_3                        = _res("ui/common/common_bg_goods_3.png")
}

function PopRecordView:ctor(param)
	local data = param or {}
	self.data = self:GetRewardRecord(data)
	self:InitUI()
end
--[[
init ui
--]]
function PopRecordView:InitUI()
	local closeLayer = display.newLayer(display.cx, display.cy ,{
		ap = display.CENTER,
		size = display.size,
		color = cc.c4b(0,0,0,175),
		enable = true ,
		cb = function()
			self:runAction(cc.RemoveSelf:create())
		end
	})
	local centerLayerSize =  cc.size(435.5,572)
	self:addChild(closeLayer,0)
	local centerLayout = display.newLayer(display.cx + -0.1, display.cy  + -33.2 ,{ap = display.CENTER,size = cc.size(435.5,572)})
	self:addChild(centerLayout,0)
	local swallowLayer = display.newLayer(display.cx, display.cy ,{ap = display.CENTER,size = display.size})
	centerLayout:addChild(swallowLayer,0)
	local bgImage = display.newImageView( RES_DICT.COMMON_BG_4 ,217.75, 286,{ap = display.CENTER,scale9 = true,size = cc.size(435.5 , 572)})
	centerLayout:addChild(bgImage,0)
	local button = display.newButton(211.75, 531 , {n = RES_DICT.COMMON_TITLE_3,ap = display.CENTER,scale9 = true,size = cc.size(186,31)})
	centerLayout:addChild(button,0)
	display.commonLabelParams(button ,{fontSize = 22,text = __('收获记录'),color = '#5b3c25',paddingW  = 20,safeW = 146})
	local bgImage2 = display.newImageView( RES_DICT.COMMON_BG_GOODS_3 ,217.25, 277.5,{ap = display.CENTER,scale9 = true,size = cc.size(387.2 , 456.2)})
	centerLayout:addChild(bgImage2,0)
	local gridView = CGridView:create(cc.size(387.2, 456.2))
	gridView:setSizeOfCell(cc.size(96 , 96 ))
	gridView:setColumns(4)
	gridView:setAutoRelocate(true)
	gridView:setAnchorPoint(display.CENTER)
	gridView:setPosition(217.25 , 277.5)
	gridView:setCountOfCell(table.nums(self.data))
	centerLayout:addChild(gridView,0)
	gridView:setDataSourceAdapterScriptHandler(handler(self,self.OnDataSourceAction))
	gridView:reloadData()
	if table.nums(self.data) == 0  then
		local richLabel = display.newRichLabel(centerLayerSize.width -40 , centerLayerSize.height/2 -20, {
			r  = true ,
			c = {
				fontWithColor(14 , { color = "#ba5c5c" , fontSize = 30 , ap = display.CENTER ,hAlign= display.TAC ,  text =__('暂无任何收获')}),
				{ img = _res('arts/cartoon/card_q_3') , ap = cc.p(0.8 ,-0.2 ) , scale = 0.7}
			}
		})
		centerLayout:addChild(richLabel)
	end
	self.viewData = {
		closeLayer                = closeLayer,
		centerLayout              = centerLayout,
		swallowLayer              = swallowLayer,
		bgImage                   = bgImage,
		button                    = button,
		bgImage2                  = bgImage2,
		gridView                  = gridView
	}
end

function PopRecordView:GetRewardRecord(data)
	local rewards = {}
	for goodsId , num  in pairs(data) do
		rewards[#rewards+1] ={
			num        = num,
			goodsId    = goodsId,
			showAmount = true
		}
	end
	return rewards
end
function PopRecordView:OnDataSourceAction(cell , idx)
	local index = idx + 1
	local pCell = cell
	local data = self.data[index]
	local cellSize = cc.size(96, 96 )
	if not pCell then
		pCell = CGridViewCell:new()
		pCell:setContentSize(cellSize)
		---@type GoodNode
		local goodNode = require("common.GoodNode").new(data)
		goodNode:setPosition(cellSize.width/2 , cellSize.height/2)
		pCell:addChild(goodNode)
		goodNode:setScale(0.8)
		pCell.viewData = {
			goodNode = goodNode
		}
	end
	xTry(function ( )
		local goodNode = pCell.viewData.goodNode
		goodNode:setTag(checkint(data.goodsId))
		display.commonUIParams(goodNode , {animate = false ,  cb = function(sender)
			local tag = sender:getTag()
			app.uiMgr:ShowInformationTipsBoard({targetNode = sender, iconId = tag, type = 1})
		end })
		pCell.viewData.goodNode:RefreshSelf(data)
	end, __G__TRACKBACK__)
	return pCell
end


return PopRecordView