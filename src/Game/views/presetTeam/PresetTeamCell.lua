---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zxr.
--- DateTime: 2020/2/26 2:48 下午
---
---@class PresetTeamCell
local PresetTeamCell = class('PresetTeamCell', function ()
    local node = CLayout:create(display.size)
    node.name = 'Game.views.presetTeam.PresetTeamCell'
    --node:enableNodeEvents()
    return node
end)

------------ import ------------
---@type CardHeadNode
local CardHeadNode = require('common.CardHeadNode')
------------ import ------------

------------ define ------------
local display = display
local _res = _res
local cc = cc
local CreateView = nil
local CreateCardNode = nil
local CreateNoCardNode = nil

local RES_DICT = {
    PRESETTEAM_BG_5            = _res("ui/presetTeam/presetteam_bg_5.png"),
    PRESETTEAM_BG_10           = _res("ui/presetTeam/presetteam_bg_10.png"),
    PRESETTEAM_BTN_CHANGE      = _res("ui/presetTeam/presetteam_btn_change.png"),
    -- PRESETTEAM_ICON_INVALID    = _res("ui/presetTeam/presetteam_icon_invalid.png"),
    PRESETTEAM_ICON_INVALID    = _res("ui/common/comon_lock_ico.png"),
    PRESETTEAM_TEAM_TITLE      = _res("ui/presetTeam/presetteam_team_title.png"),
    PRESETTEAM_BG_5_UNLOCK     = _res("ui/presetTeam/presetteam_bg_5_unlock.png"),
    PRESETTEAM_BG_10_UNLOCK    = _res("ui/presetTeam/presetteam_bg_10_unlock.png"),
    BTN_SELECTION_UNUSED       = _res('ui/tower/library/btn_selection_unused.png'),
    TEAM_BTN_SELECTION_CHOOSED = _res('ui/home/teamformation/choosehero/team_btn_selection_choosed.png'),
    COMMON_BTN                 = _res('ui/common/common_btn_orange.png'),
    COMMON_BTN_DISABLE         = _res('ui/common/common_btn_orange_disable.png'),
    TEAM_ICO_SKILL_CIRCLE      = _res('ui/home/teamformation/team_ico_skill_circle.png'),
    CREATE_ROLES_BG_NAME       = _res('ui/author/createPlayer/create_roles_bg_name.png'),
    TEAM_ICO_CAPTAIN           = _res('ui/home/teamformation/team_ico_captain.png'),
    KAPAI_FRAME_BG_NOCARD      = _res('ui/common/kapai_frame_bg_nocard.png'),
}

local PRESET_TEAM_TYPE = PRESET_TEAM_TYPE
local PRESET_TEAM_CELL_H = 132

------------ define ------------

function PresetTeamCell:ctor( ... )
    self.args = unpack({...}) or {}
    self.isShowCombo = false
    self:InitUI()
end
--[[
init ui
--]]
function PresetTeamCell:InitUI()
    xTry(function ( )

        local args = self.args
        local presetTeamType = args.presetTeamType or PRESET_TEAM_TYPE.FIVE_DEFAULT
        local isEditMode, isSelectMode = args.isEditMode, args.isSelectMode
        local conf = PresetTeamCell.GetPresetTeamConf(presetTeamType, isEditMode, isSelectMode)
        local define = PRESET_TEAM_DEFINES[presetTeamType]

        self:setContentSize(conf.size)
        local viewData = CreateView(conf, define, isEditMode)
        self:addChild(viewData.view)

        self.presetTeamType = presetTeamType
        self.conf = conf
        self.define_ = define
        self.viewData_ = viewData

        self:InitView_(isEditMode, isSelectMode)

        display.commonUIParams(self.viewData_.comboBtn, {cb = handler(self, self.OnClickComboBtnAction), animate = false})
    end, __G__TRACKBACK__)
end

CreateView = function(conf, define, isEditMode)
    local size, teamInfoLayerSize = conf.size, conf.teamInfoLayerSize
    local cardCount, teamCount = checkint(define.cardCount), checkint(define.maxTeamCount)
    if isEditMode then
        teamCount = 1
    end

    local view = display.newLayer(0, 0, {size = size})

    -----------------------------
    ---- team info layer
    teamInfoLayerSize = teamInfoLayerSize or size
    local teamInfoLayer = display.newLayer(0, 0, {size = teamInfoLayerSize})
    view:addChild(teamInfoLayer)

    local titleLayer = display.newLayer(0, size.height - 24, {ap = cc.p(0, 0.5), size = cc.size(343, 31)})
    teamInfoLayer:addChild(titleLayer)

    local titleImg = display.newImageView(RES_DICT.PRESETTEAM_TEAM_TITLE, 171.5, 15.5, {ap = cc.p(0.5, 0.5)})
    titleLayer:addChild(titleImg)

    local teamNameLabel = display.newLabel(6, 15.5, {ap = cc.p(0, 0.5), fontSize = 22, font = TTF_GAME_FONT, ttf = true, color = "#ffffff"})
    titleLayer:addChild(teamNameLabel)

    local teamNameBoxSize = cc.size(180, 38)
    local teamNameTouchView = display.newLayer(6, 15.5, {ap = cc.p(0, 0.5), size = teamNameBoxSize, enable = true, color = cc.c4b(0,0,0,0)})
    titleLayer:addChild(teamNameTouchView)
    teamNameTouchView:setVisible(false)
    
    -- 团队名称
    local teamNamEditBox = ccui.EditBox:create(teamNameBoxSize, 'empty')
    teamNamEditBox:setFontSize(24)
    -- teamNamEditBox:setFontColor(ccc3FromInt('#ffffff'))
    teamNamEditBox:setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE)
    --teamName:setPlaceHolder(__('请输入昵称'))
    teamNamEditBox:setPlaceholderFontSize(24)
    teamNamEditBox:setPlaceholderFontColor(ccc3FromInt('#ffffff'))
    teamNamEditBox:setReturnType(cc.KEYBOARD_RETURNTYPE_DONE)
    -- teamNamEditBox:setCascadeOpacityEnabled(true)
    display.commonUIParams(teamNamEditBox, { po = cc.p(6, 15.5), ap = cc.p(0, 0.5)})
    titleLayer:addChild(teamNamEditBox)
    teamNamEditBox:setVisible(false)

    --- 修改团队信息按钮
    -- local changeBtn = display.newButton(314, 15, {ap = cc.p(0.5, 0.5), n = RES_DICT.PRESETTEAM_BTN_CHANGE, scale9 = true, size = cc.size(58, 30)})
    -- display.commonLabelParams(changeBtn, {ap = cc.p(0.5, 0.5), fontSize = 18, color = "#903D00", text = __("更改")})
    -- titleLayer:addChild(changeBtn)
    -- changeBtn:setVisible(false)

    local lockIcon = display.newImageView(RES_DICT.PRESETTEAM_ICON_INVALID, teamInfoLayerSize.width - 20, teamInfoLayerSize.height - 8, {ap = display.RIGHT_TOP})
    lockIcon:setVisible(false)
    teamInfoLayer:addChild(lockIcon)

    -------------------------------------------------
    -- team layer
    local cardNodes   = {}
    local emptyNodes  = {}
    local teamLayers  = {}
    local allTeamSize = cc.size(teamInfoLayerSize.width - 16.5, teamCount * PRESET_TEAM_CELL_H)
    for teamIndex = 1, teamCount do
        local teamLayer = display.newLayer(0, 0, {ap = cc.p(0, 0.5), size = cc.size(allTeamSize.width, PRESET_TEAM_CELL_H)})
        teamLayer:setPositionY(teamInfoLayerSize.height - 105 - (teamIndex-1) * PRESET_TEAM_CELL_H)
        teamInfoLayer:addChild(teamLayer)
        
        local teamBg = display.newImageView(RES_DICT[string.format("PRESETTEAM_BG_%s", cardCount)], 0, 66, {ap = cc.p(0, 0.5)})
        teamLayer:addChild(teamBg)
        
        teamLayers[teamIndex] = teamLayer
        emptyNodes[teamIndex] = {}
        cardNodes[teamIndex]  = {}
    end
    
    -----------------------------
    -- click area
    local clickArea = display.newLayer(0, 0, {size = allTeamSize, color = cc.r4b(0), enable = true})
    teamInfoLayer:addChild(clickArea, 1)
    
    local invalidTeamFg = display.newLayer(0, 23, {size = allTeamSize, ap = cc.p(0, 0), color = cc.c4b(0, 0, 0, 150)})
    teamInfoLayer:addChild(invalidTeamFg, 1)
    invalidTeamFg:setVisible(false)


    local invalidLabel = display.newLabel(allTeamSize.width/2, -10, fontWithColor(6, {color = "#ffffff", text = __('编队已失效，请重新编辑队伍')}))
    invalidTeamFg:addChild(invalidLabel)
    ---- team info layer

    --- 查看连携按钮
    local comboBtn = display.newButton(size.width, size.height * 0.5, {n = RES_DICT.BTN_SELECTION_UNUSED, ap = display.RIGHT_CENTER})
    display.commonLabelParams(comboBtn, fontWithColor(18, {text = __('查看连携')}))
    view:addChild(comboBtn)
    comboBtn:setVisible(false)

    --- 出战按钮
    local selectTeamBtn = display.newButton(size.width, size.height * 0.5, { n = RES_DICT.COMMON_BTN_DISABLE, ap = display.RIGHT_CENTER})
    display.commonLabelParams(selectTeamBtn, fontWithColor(18, { text = __('出战')}))
    view:addChild(selectTeamBtn)
    selectTeamBtn:setVisible(false)

    return {
        view              = view,
        clickArea         = clickArea,
        titleLabel        = titleLabel,
        teamNameLabel     = teamNameLabel,
        teamNamEditBox    = teamNamEditBox,
        teamNameTouchView = teamNameTouchView,
        teamLayers        = teamLayers,
        invalidTeamFg     = invalidTeamFg,
        comboBtn          = comboBtn,
        selectTeamBtn     = selectTeamBtn,
        cardNodes         = cardNodes,
        emptyNodes        = emptyNodes,
        lockIcon          = lockIcon,
    }

end

CreateNoCardNode = function(isCaptain, isSelectMode)
    local size = cc.size(81, 81)

    local middleX, middleY = size.width / 2, size.height / 2

    local view = display.newLayer(0, 0, {size = size})
    local bg = display.newImageView(RES_DICT.KAPAI_FRAME_BG_NOCARD, middleX, middleY)
    bg:setScale(0.48)
    view:addChild(bg)

    if isCaptain and not isSelectMode then
        local addIcon = display.newNSprite(_res('ui/common/maps_fight_btn_pet_add.png'), middleX, middleY)
        view:addChild(addIcon)
    end

    return view
end

CreateCardNode = function (cardHeadNodeData, isCaptain)
    local cardHeadLayerSize = cc.size(81, 81)

    local cardHeadLayer = display.newLayer(0, 0, {size = cardHeadLayerSize})

    local cardHeadNode = CardHeadNode.new(cardHeadNodeData)
    cardHeadNode:setScale(0.45)
    cardHeadNode:setPosition(cc.p(cardHeadLayerSize.width / 2, cardHeadLayerSize.height / 2))
    cardHeadLayer:addChild(cardHeadNode)
    cardHeadNode:setName('cardHeadNode')

    if isCaptain then
        -- 队长mark
        local captainMark = display.newImageView(RES_DICT.TEAM_ICO_CAPTAIN, cardHeadLayerSize.width / 2, cardHeadLayerSize.height / 2 - 5, {ap = display.CENTER_BOTTOM})
        cardHeadLayer:addChild(captainMark)
    end

    local comboLayer = display.newLayer(0, 0, {size = cardHeadLayerSize})
    comboLayer:setVisible(false)
    cardHeadLayer:addChild(comboLayer)

    local skillLayer = display.newLayer(0, 0, {size = cardHeadLayerSize, color = cc.c4b(0, 0, 0, 130), enable = true})
    comboLayer:addChild(skillLayer)

    local skillFrame = display.newImageView(RES_DICT.TEAM_ICO_SKILL_CIRCLE, cardHeadLayerSize.width/2, cardHeadLayerSize.height/2, {scale = 1.3})
    comboLayer:addChild(skillFrame)

    return {
        cardHeadLayer = cardHeadLayer,
        cardHeadNode = cardHeadNode,
        comboLayer   = comboLayer,
        skillFrame   = skillFrame,
        skillLayer   = skillLayer,
    }
end

---InitView_
---@param isEditMode boolean    是否是编辑模式
---@param isSelectMode boolean  是否是选择模式
function PresetTeamCell:InitView_(isEditMode, isSelectMode)
    local viewData = self:GetViewData()
    viewData.clickArea:setVisible(not (isEditMode or isSelectMode))
    viewData.comboBtn:setVisible(isEditMode)
    viewData.teamNameTouchView:setVisible(isEditMode)
    -- viewData.teamNamEditBox:setVisible(isEditMode)
    viewData.selectTeamBtn:setVisible(isSelectMode)
end

---------------------------------------------------
-- view control begin --
---------------------------------------------------

function PresetTeamCell:RefreshUI(cellIndex, data, isEditMode, initTeamIndex)
    local cellViewData = self:GetViewData()

    -- update name
    local teamName = self:UpdateTeamNameLabel(data.name, cellIndex)
    if data.name == nil then
        data.defaultName = teamName
    end
    cellViewData.teamNamEditBox:setText(teamName)
    cellViewData.teamNamEditBox:setPlaceHolder(teamName)

    -- udate cards
    local cardsList = data.cardIds or {}
    local cardCount = checkint(self.define_.cardCount)
    local teamCount = checkint(self.define_.maxTeamCount)
    local eachTeamDataFunc = function(eachTeamIndex)
        local cardDatas  = {}
        local cardIdList = cardsList[eachTeamIndex] or {}
        for cardIndex = 1, cardCount do
            if cardIdList[cardIndex] then
                table.insert(cardDatas, {id = cardIdList[cardIndex]})
            else
                table.insert(cardDatas, {})
            end
        end
        self:UpdateTeamLayer(cardDatas, eachTeamIndex, isEditMode)
    end

    if isEditMode and initTeamIndex then
        eachTeamDataFunc(initTeamIndex)
    else
        for teamIndex = 1, teamCount do
            eachTeamDataFunc(teamIndex)
        end
    end

    -- update valid
    local isEmptyTeam   = next(cardsList) == nil
    local invalidTeamFg = cellViewData.invalidTeamFg
    if isEmptyTeam or isEditMode then
        invalidTeamFg:setVisible(false)
    else
        local valid = data.valid and checkint(data.valid) or 1
        invalidTeamFg:setVisible(valid == 0)
    end

    -- update lock
    local isLocked = checkint(data.lock) == 1
    cellViewData.lockIcon:setVisible(isLocked)

    -- update select status
    self:UpdateSelectBtnShowState(cellViewData, cellIndex, isEmptyTeam, data.valid)
end

---更新自定义团队名称
---@param teamName string 自定义团队名称
function PresetTeamCell:UpdateTeamNameLabel(teamName, cellIndex)
    teamName = teamName
    if not teamName then
        teamName = string.format(__('队伍%s'), cellIndex)
    end

    local cellViewData = self:GetViewData()
    display.commonLabelParams(cellViewData.teamNameLabel, {text = teamName})
    return teamName
end

---SwitchTeamNamEditBoxShowState
---切换团队名称编辑框显示状态
---@param isEnable boolean
function PresetTeamCell:SwitchTeamNamEditBoxShowState(isEnable)
    local cellViewData = self:GetViewData()
    local teamNamEditBox = cellViewData.teamNamEditBox
    teamNamEditBox:setVisible(isEnable)
    cellViewData.teamNameLabel:setVisible(not isEnable)
    cellViewData.teamNameTouchView:setVisible(not isEnable)

    if isEnable then
        -- 吊起 editbox 键盘
        teamNamEditBox:touchDownAction(teamNamEditBox, ccui.TouchEventType.ended)
    end
    --display.commonLabelParams(cellViewData.changeBtn, {text = isEnable and __('确定') or __('更改')})
end

---更新团队层
---@param cardDataList table 卡牌数据
function PresetTeamCell:UpdateTeamLayer(cardDataList, _teamIndex, isEditMode)
    local viewData   = self:GetViewData()
    local teamIndex  = isEditMode and 1 or _teamIndex
    local teamLayer  = viewData.teamLayers[teamIndex]
    local cardLineup = checktable(viewData.cardNodes[teamIndex])
    local emptyNodes = checktable(viewData.emptyNodes[teamIndex])

    local cardDataList = cardDataList or {}
    local posX, posY = 22.9, 68.1
    local cardCount = checkint(self.define_.cardCount)
    local isTenCard = cardCount == 10
    local offsetX = isTenCard and 97 or 104

    local args = self.args
    local isSelectMode = args.isSelectMode

    local formationData = {}
    for i = 1, cardCount do
        local teamCardData = cardDataList[i] or {}
        local playerCardId = teamCardData.id
        if playerCardId ~= nil then
            local cardData = app.gameMgr:GetCardDataById(playerCardId) or {}
            table.insert(formationData, {cardId = cardData.cardId})
        end
    end

    for i = 1, cardCount do
        --- 1. 创建 no card node
        local isCaptain = i == 1
        local emptyNode = emptyNodes[i]
        if emptyNode == nil then
            emptyNode = CreateNoCardNode(isCaptain, isSelectMode)
            emptyNodes[i] = emptyNode
            
            display.commonUIParams(emptyNode, {ap = display.LEFT_CENTER, po = cc.p(posX + (i - 1) * offsetX, posY)})
            teamLayer:addChild(emptyNode)
        end

        -- update by teamCardData
        local teamCardData = cardDataList[i] or {}
        local playerCardId = teamCardData.id
        local cardNodeViewData = cardLineup[i]
        if playerCardId == nil then
            -- empty card
            if cardNodeViewData then
                cardNodeViewData.cardHeadLayer:setVisible(false)
                emptyNode:setVisible(true)
            end
        else
            local cardHeadNodeData = {
                id = playerCardId,
                showBaseState = true, showActionState = false, showVigourState = false
            }

            local cardData = app.gameMgr:GetCardDataById(playerCardId) or {}
            local cSkillId = checkint(CardUtils.GetCardConnectSkillId(cardData.cardId))
            
            if cardNodeViewData then
                -- check refresh cardNode
                local cardNode = cardNodeViewData.cardHeadNode
                if checkint(cardNode:getTag()) ~= checkint(playerCardId) then
                    cardNode:RefreshUI(cardHeadNodeData)
                end
                cardNodeViewData.cardHeadLayer:setVisible(true)

            else
                -- create cardNode
                cardNodeViewData = CreateCardNode(cardHeadNodeData, isCaptain)
                cardLineup[i] = cardNodeViewData

                local cardHeadLayer = cardNodeViewData.cardHeadLayer
                display.commonUIParams(cardHeadLayer, {ap = display.LEFT_CENTER, po = cc.p(posX + (i - 1) * offsetX, posY)})
                teamLayer:addChild(cardHeadLayer)

                local skillLayer = cardNodeViewData.skillLayer
                local skillLayerContentSize = skillLayer:getContentSize()
                
                local connectIcon = display.newImageView("", skillLayerContentSize.width * 0.5, skillLayerContentSize.height * 0.5, {scale = 0.4})
                skillLayer:addChild(connectIcon)
                cardNodeViewData.connectIcon = connectIcon

                display.commonUIParams(skillLayer, {cb = handler(self, self.OnClickConnectSkillAction)})
            end

            -- update connectSkill
            local isOwnConnectSkill = cSkillId > 0
            if isOwnConnectSkill then
                local skillIconPath  = CommonUtils.GetSkillIconPath(checktable(CardUtils.GetSkillConfigBySkillId(cSkillId)).id)
                local isEnableCSkill = CardUtils.IsConnectSkillEnable(cardData.cardId, formationData) == true
                cardNodeViewData.connectIcon:setTexture(skillIconPath)
                cardNodeViewData.connectIcon:setColor(isEnableCSkill and cc.c3b(255, 255, 255) or cc.c3b(100, 100, 100))
            end
            cardNodeViewData.connectIcon:setVisible(isOwnConnectSkill)
            cardNodeViewData.skillFrame:setVisible(isOwnConnectSkill)
            
            cardNodeViewData.skillLayer:setTag(playerCardId)
            cardNodeViewData.cardHeadNode:setTag(checkint(playerCardId))
            cardNodeViewData.comboLayer:setVisible(self.isShowCombo)
            cardNodeViewData.skillLayer:setTouchEnabled(self.isShowCombo)
        end
    end
end

---@param viewData table
---@param cellIndex number cell index
---@param isEmptyTeam boolean 是否为空队伍
---@param valid   number   编队是否可用 1：可用；0：不可用
function PresetTeamCell:UpdateSelectBtnShowState(viewData, cellIndex, isEmptyTeam, valid)
    local selectTeamBtn = viewData.selectTeamBtn
    if not selectTeamBtn:isVisible() then return end

    local isValid = checkint(valid) == 1 and not isEmptyTeam
    local img = isValid and RES_DICT.COMMON_BTN or RES_DICT.COMMON_BTN_DISABLE
    selectTeamBtn:setNormalImage(img)
    selectTeamBtn:setDisabledImage(img)
    selectTeamBtn:setTag(isValid and 1 or 0)
    selectTeamBtn:setUserTag(cellIndex)
end

---------------------------------------------------
-- view control end --
---------------------------------------------------

---------------------------------------------------
-- get set begin --
---------------------------------------------------

---@param presetTeamType PRESET_TEAM_TYPE
---@param isEditMode boolean
---@param isSelectMode boolean
function PresetTeamCell.GetPresetTeamConf(presetTeamType, isEditMode, isSelectMode)
    local conf
    if presetTeamType == PRESET_TEAM_TYPE.FIVE_DEFAULT then
        if isEditMode then
            conf = {
                size = cc.size(700, 63 + PRESET_TEAM_CELL_H),
                teamInfoLayerSize = cc.size(562, 63 + PRESET_TEAM_CELL_H),
            }
        elseif isSelectMode then
            conf = {
                size = cc.size(700, 63 + PRESET_TEAM_CELL_H),
                teamInfoLayerSize = cc.size(562, 63 + PRESET_TEAM_CELL_H),
            }
        else
            conf = {
                size = cc.size(562, 63 + PRESET_TEAM_CELL_H),
            }
        end
    elseif presetTeamType == PRESET_TEAM_TYPE.TEN_DEFAULT then
        if isEditMode then
            conf = {
                size = cc.size(1155, 63 + PRESET_TEAM_CELL_H),
                teamInfoLayerSize = cc.size(1018, 63 + PRESET_TEAM_CELL_H),
            }
        elseif isSelectMode then
            conf = {
                size = cc.size(1155, 63 + PRESET_TEAM_CELL_H),
                teamInfoLayerSize = cc.size(1018, 63 + PRESET_TEAM_CELL_H),
            }
        else
            conf = {
                size = cc.size(1018, 63 + PRESET_TEAM_CELL_H),
            }
        end
    elseif presetTeamType == PRESET_TEAM_TYPE.TAG_MATCH then
        if isEditMode then
            conf = {
                size = cc.size(700, 63 + PRESET_TEAM_CELL_H),
                teamInfoLayerSize = cc.size(562, 63 + PRESET_TEAM_CELL_H),
            }
        elseif isSelectMode then
            conf = {
                size = cc.size(700, 63 + PRESET_TEAM_CELL_H*3),
                teamInfoLayerSize = cc.size(562, 63 + PRESET_TEAM_CELL_H*3),
            }
        else
            conf = {
                size = cc.size(562, 63 + PRESET_TEAM_CELL_H*3),
            }
        end
    end

    return conf
end


---------------------------------------------------
-- get set end --
---------------------------------------------------

---------------------------------------------------
--- click handler begin --
---------------------------------------------------

---点击查看连携技按钮回调
---@param sender userdata
function PresetTeamCell:OnClickComboBtnAction(sender)
    PlayAudioByClickNormal()
    
    local cellViewData = self:GetViewData()
    --local comboBtn = cellViewData.comboBtn
    self.isShowCombo = not self.isShowCombo
    local img = self.isShowCombo and RES_DICT.TEAM_BTN_SELECTION_CHOOSED or RES_DICT.BTN_SELECTION_UNUSED
    sender:setNormalImage(img)
    sender:setSelectedImage(img)

    for teamIndex, cardNodes in ipairs(cellViewData.cardNodes) do
        for i, v in pairs(cardNodes) do
            v.comboLayer:setVisible(self.isShowCombo)
            v.skillLayer:setTouchEnabled(self.isShowCombo)
        end
    end
end

---查看连携技技能详情回调
---@param sender userdata
function PresetTeamCell:OnClickConnectSkillAction(sender)
    local playerCardId = sender:getTag()
    local cardData = app.gameMgr:GetCardDataById(playerCardId) or {}
    local cSkillId = checkint(CardUtils.GetCardConnectSkillId(cardData.cardId))

    -- check have cSkill
    if cSkillId > 0 then
        local showCSkillData = {
            cardId = cardData.cardId,
            id     = playerCardId,
            tag    = 1234,
        }

        -- show CSkill layer
        local cardCSkillLayer = require('Game.views.ShowConcertSkillMes').new(showCSkillData)
        display.commonUIParams(cardCSkillLayer, {ap = display.CENTER, po = display.center, tag = showCSkillData.tag})
        app.uiMgr:GetCurrentScene():AddDialog(cardCSkillLayer)

    else
        app.uiMgr:ShowInformationTips(__('该卡牌没有连携技'))
    end

end
---------------------------------------------------
--- click handler end --
---------------------------------------------------

function PresetTeamCell:GetViewData()
    return self.viewData_
end

return PresetTeamCell