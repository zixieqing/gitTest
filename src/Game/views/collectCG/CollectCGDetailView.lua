---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xingweihao.
--- DateTime: 2018/9/17 5:45 PM
---
local RES_DICT = {
    CG_MAIN_BG_CARD               = _res('ui/home/cg/CG_main_bg_card.png'),
    CG_PUZZLE_ICO_ZOOM            = _res('ui/home/cg/CG_puzzle_ico_zoom.png'),
    NOTICE_BTN_QUIT               = _res('update/notice_btn_quit.png'),
    CG_PUZZLE_LINE_2              = _res('ui/home/cg/CG_puzzle_line_2.png'),
    CG_PUZZLE_BG_ITEM             = _res('ui/home/cg/CG_puzzle_bg_item.png'),
    BUTTON_DISABLE                = _res('Default/Button_Disable.png'),
    CG_PUZZLE_ICO_COMPLETED_0     = _res('ui/home/cg/complete/CG_puzzle_ico_completed_0.png'),
    CG_PUZZLE_FRAME               = _res('ui/home/cg/CG_puzzle_frame.png'),
    CG_PUZZLE_LINE_3              = _res('ui/home/cg/CG_puzzle_line_3.png'),
    CG_PUZZLE_BG_TEXT             = _res('ui/home/cg/CG_puzzle_bg_text.png'),
    CG_PUZZLE_BG                  = _res('ui/home/cg/CG_puzzle_bg.png'),
    CG_PUZZLE_FRAME_GAP           = _res('ui/home/cg/CG_puzzle_frame_gap.png'),
    LOADING_VIEW                  = _res('arts/common/loading_view_0.jpg'),
}
---@class CollectCGDetailView :Node
local CollectCGDetailView = class('home.CollectCGDetailView',function ()
    local node = CLayout:create(display.size)
    node.name = 'Game.views.CollectCGDetailView'
    node:enableNodeEvents()
    return node
end)
function CollectCGDetailView:ctor(param)
    param = param or {}
    self:initUI()
end

function CollectCGDetailView:initUI()
    local view = display.newLayer(display.cx, display.cy,{ap = display.CENTER, size = display.size})
    local swallowLayer = display.newLayer(display.cx , display.cy , {ap = display.CENTER , color = cc.c4b(0,0,0,175),enable  = true  , size = display.size } )
    view:addChild(swallowLayer)
    local content = display.newLayer(667, 375,
            { ap = display.CENTER, size = cc.size(1280, 700) } )
    content:setPosition(display.cx + 0, display.cy + 0)
    view:addChild(content,2 )
    content:setScale(0.2)
    self:addChild(view)
    view:setPosition(display.center)
    local bottomLayout = display.newLayer(0, 0,
            { ap = display.LEFT_BOTTOM, size = cc.size(1280, 700) })
    content:addChild(bottomLayout)
    local bottomImage = display.newImageView(RES_DICT.CG_PUZZLE_BG, 203, 1,
            { ap = display.LEFT_BOTTOM, tag = 11, enable = false, scale9 = true, size = cc.size(1064, 653) })
    bottomLayout:addChild(bottomImage)

    local lineImage = display.newNSprite(RES_DICT.CG_PUZZLE_LINE_3, 1166, 77,
            { ap = display.CENTER, tag = 5 })
    lineImage:setScale(1, 1)
    bottomLayout:addChild(lineImage)

    local closeButton = display.newButton(1255, 647, { ap = display.CENTER ,  enable = true , n = RES_DICT.NOTICE_BTN_QUIT, d = RES_DICT.NOTICE_BTN_QUIT, s = RES_DICT.NOTICE_BTN_QUIT, scale9 = true, size = cc.size(95, 95), tag = 4 })
    display.commonLabelParams(closeButton, {text = "", fontSize = 14, color = '#414146'})
    bottomLayout:addChild(closeButton)

    local prograssLabel = display.newLabel(1168, 57,
            { ap = display.CENTER, color = '#5b3c25', text = "", fontSize = 24, tag = 6 })
    bottomLayout:addChild(prograssLabel)

    local needGoodsLabel = display.newLabel(1165, 443,
            { ap = display.CENTER, color = '#5b3c25', text = __('解锁需要道具'), w= 170, hAlign = display.TAC, fontSize = 22, tag = 7 })
    bottomLayout:addChild(needGoodsLabel)

    local flowers = display.newNSprite(RES_DICT.CG_PUZZLE_ICO_COMPLETED_0, 1169, 173,
            { ap = display.CENTER, tag = 9 })
    flowers:setScale(1, 1)
    bottomLayout:addChild(flowers)

    local goodsBg = display.newNSprite(RES_DICT.CG_PUZZLE_BG_ITEM, 1163, 344,
            { ap = display.CENTER, tag = 8 })
    goodsBg:setScale(1, 1)
    bottomLayout:addChild(goodsBg)

    local lineThree = display.newImageView(RES_DICT.CG_PUZZLE_LINE_2, 1076, 329,
            { ap = display.CENTER, tag = 12, enable = false })
    bottomLayout:addChild(lineThree)


    local foreLayout = display.newLayer(0, 0,
            { ap = display.LEFT_BOTTOM, size = cc.size(1280, 700) })
    content:addChild(foreLayout)
    local cardBottom = display.newImageView(RES_DICT.CG_MAIN_BG_CARD, -2, 25,
                                            { ap = display.LEFT_BOTTOM, tag = 14, enable = false, scale9 = true, size = cc.size(1061, 655) })
    foreLayout:addChild(cardBottom)
    local bgTextImage = display.newNSprite(RES_DICT.CG_PUZZLE_BG_TEXT, 530, 40,
            { ap = display.CENTER_BOTTOM, tag = 15  , scale9 = true })
    bgTextImage:setScale(1, 1)

    foreLayout:addChild(bgTextImage,10)

    local pluzzDescr = display.newLabel(120, 110,
            { ap = display.LEFT_TOP, color = '#dac299', text = "", fontSize = 20, tag = 16 , w = 800  })
    bgTextImage:addChild(pluzzDescr)

    local lookComplete =  display.newImageView( RES_DICT.CG_PUZZLE_ICO_ZOOM ,1009, 631 )
    --display.newButton(1009, 631, { ap = display.CENTER ,  n = RES_DICT.CG_PUZZLE_ICO_ZOOM, s = RES_DICT.CG_PUZZLE_ICO_ZOOM, scale9 = true, size = cc.size(76, 76), tag = 23 })
    --display.commonLabelParams(lookComplete, {text = "", fontSize = 14, color = '#414146'})
    foreLayout:addChild(lookComplete,100)
    bottomLayout:setPositionX(-160)
    local cardFrameImage = display.newLayer(12, 39,
            { ap = display.LEFT_BOTTOM, color = cc.r4b(0), size = cc.size(1036, 631), enable = true })
    foreLayout:addChild(cardFrameImage)
    local cardFrameImageSize = cardFrameImage:getContentSize()
    local pluzzImage = display.newImageView(RES_DICT.LOADING_VIEW ,cardFrameImageSize.width/2 , cardFrameImageSize.height/2 ,{scale  =  0.65 } )
    cardFrameImage:addChild(pluzzImage)
    local pluzzTableImage = {}
    local image = nil
    local height =  156
    local width = 172
    local gridImage = display.newImageView(RES_DICT.CG_PUZZLE_FRAME_GAP , cardFrameImageSize.width /2 , cardFrameImageSize.height/2 - 15)
    cardFrameImage:addChild(gridImage)
    for i = 1 , 24  do
         local divisor =  math.floor((i-1) / 4)
         local mod  = (i-1)  % 4
        image = display.newImageView( _res( string.format('ui/home/cg/pluzz/CG_ico_puzzle_static_%s.png' , i ) ) ,divisor  *width + 95  , height * mod +78, {ap = display.CENTER}  )
        cardFrameImage:addChild(image )
        pluzzTableImage[i] = image
    end
    local imageFrame = display.newImageView(RES_DICT.CG_PUZZLE_FRAME, -22, -35,
            { ap = display.LEFT_BOTTOM, tag = 13, enable = false })
    cardFrameImage:addChild(imageFrame,2)

    local goodNodePos = cc.p(goodsBg:getPosition())
    local goodNode = require('common.GoodNode').new({goodsId = CRYSTAL_ID})
    bottomLayout:addChild(goodNode)
    goodNode:setPosition(goodNodePos)

    self.viewData = {
        content         = content,
        bottomLayout    = bottomLayout,
        foreLayout      = foreLayout,
        bottomImage     = bottomImage,
        lineImage       = lineImage,
        closeButton     = closeButton,
        prograssLabel   = prograssLabel,
        needGoodsLabel  = needGoodsLabel,
        flowers         = flowers,
        goodsBg         = goodsBg,
        lineThree       = lineThree,
        cardBottom      = cardBottom,
        imageFrame      = imageFrame,
        bgTextImage     = bgTextImage,
        pluzzDescr      = pluzzDescr,
        lookComplete    = lookComplete,
        cardFrameImage  = cardFrameImage,
        pluzzTableImage = pluzzTableImage,
        gridImage       = gridImage,
        goodNode        = goodNode,
        pluzzImage      = pluzzImage,
    }
end




return CollectCGDetailView
